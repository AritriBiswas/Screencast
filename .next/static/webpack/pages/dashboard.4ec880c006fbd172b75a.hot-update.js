webpackHotUpdate_N_E("pages/dashboard",{

/***/ "./components/Footers.js":
false,

/***/ "./components/Main.js":
/*!****************************!*\
  !*** ./components/Main.js ***!
  \****************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* WEBPACK VAR INJECTION */(function(module) {/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return game; });\n/* harmony import */ var styled_jsx_style__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! styled-jsx/style */ \"./node_modules/styled-jsx/style.js\");\n/* harmony import */ var styled_jsx_style__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(styled_jsx_style__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! axios */ \"./node_modules/axios/index.js\");\n/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(axios__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _components_Question__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../components/Question */ \"./components/Question.js\");\n/* harmony import */ var _components_Hint__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../components/Hint */ \"./components/Hint.js\");\n/* harmony import */ var _components_AnsAlert__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../components/AnsAlert */ \"./components/AnsAlert.js\");\n/* harmony import */ var _components_Answer__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../components/Answer */ \"./components/Answer.js\");\n/* harmony import */ var next_router__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! next/router */ \"./node_modules/next/dist/client/router.js\");\n/* harmony import */ var next_router__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(next_router__WEBPACK_IMPORTED_MODULE_7__);\n/* harmony import */ var _components_Layout__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../components/Layout */ \"./components/Layout.js\");\n/* harmony import */ var _components_Loader__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../components/Loader */ \"./components/Loader.js\");\n/* harmony import */ var react_google_login__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! react-google-login */ \"./node_modules/react-google-login/dist/google-login.js\");\n/* harmony import */ var react_google_login__WEBPACK_IMPORTED_MODULE_10___default = /*#__PURE__*/__webpack_require__.n(react_google_login__WEBPACK_IMPORTED_MODULE_10__);\n/* harmony import */ var next_link__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! next/link */ \"./node_modules/next/link.js\");\n/* harmony import */ var next_link__WEBPACK_IMPORTED_MODULE_11___default = /*#__PURE__*/__webpack_require__.n(next_link__WEBPACK_IMPORTED_MODULE_11__);\n/* harmony import */ var _material_ui_core_MenuItem__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! @material-ui/core/MenuItem */ \"./node_modules/@material-ui/core/esm/MenuItem/index.js\");\n/* harmony import */ var _material_ui_core__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! @material-ui/core */ \"./node_modules/@material-ui/core/esm/index.js\");\n/* harmony import */ var _Rules__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./Rules */ \"./components/Rules.js\");\nvar _jsxFileName = \"/home/ruchika/Desktop/Testing4/Screencast/components/Main.js\",\n    _s = $RefreshSig$();\n\n\nvar __jsx = react__WEBPACK_IMPORTED_MODULE_2___default.a.createElement;\n// import axios from \"axios\";\n// import React from \"react\";\n// import { useState, useEffect } from \"react\";\n// import Question from \"../components/Question\";\n// import Hint from \"../components/Hint\";\n// import AnsAlert from \"../components/AnsAlert\";\n// import Answer from \"../components/Answer\";\n// import Router from \"next/router\";\n// // import data from '../env.json';\n// import Layout from \"../components/Layout\";\n// import Loader from \"../components/Loader\";\n// import { GoogleLogout } from \"react-google-login\";\n// // import Router from \"next/router\";\n// import Link from \"next/link\";\n// import MenuItem from \"@material-ui/core/MenuItem\";\n// import { Typography } from \"@material-ui/core\";\n// import Rules from \"./Rules\";\n// export default function game(props) {\n//       const [answer,setAnswer]= useState(\"\"),\n//       [questions,setQuestions]=useState(\"\"),\n//       [qsNo,setQsNo]=useState(1),\n//       [audio,setAudio]=useState(\"\"),\n//       [image,setImage]=useState(\"\"),\n//       [isLoggedIn,setIsLoggedIn]=useState (false),\n//       [hint,setHint]=useState(\"\"),\n//       [day,setDay]=useState(\"\"),\n//       [end,setEnd]=useState(\"\"),\n//       [message,setMessage]=useState(\"\"),\n//       [v,setV]=useState(\"\"),\n//       [loaded,setLoaded]=useState(false)\n//       const [isSignedIn, setIsSigned] = useState(false);\n//   // const [name, setName] = useState(\"\");\n//   // const [image, setImage] = useState(\"\");\n//   // const [Log, setLog] = useState(false);\n//   // useEffect(() => {\n//   //   if (localStorage.getItem(\"email\")) {\n//   //     setIsSigned(true);\n//   //     setName(localStorage.getItem(\"name\"));\n//   //     setImage(localStorage.getItem(\"image\"));\n//   //     setLog(localStorage.getItem(\"email\"));\n//   //   }\n//   // });\n//   // const logout = () => {\n//   //   //FB.logout();\n//   //   //clearTimeout(localStorage.getItem(\"interval_id\"));\n//   //   console.log(\"Lady\")\n//   //   if(localStorage.getItem('start')<Date.now())\n//   //   {\n//   //     localStorage.removeItem('email');\n//   //     Router.push('/')\n//   //   }\n//   //   else\n//   //   {\n//   //     localStorage.removeItem('email');\n//   //     Router.reload('/')\n//   //   }\n//   // };\n//     // this.submit = this.submit.bind(this);\n//     // this.submit2 = this.submit2.bind(this);\n//     // this.change = this.change.bind(this);\n//     // this.checkAns = this.checkAns.bind(this);\n//     // this.getQuestions = this.getQuestions.bind(this);\n//       useEffect (() => {\n//     axios\n//       .get(process.env.api + \"/api/status\")\n//       .then((response) => {\n//         var temp3 = new Date(response.data.start_time);\n//         let temp2 = new Date(response.data.end_time);\n//         localStorage.setItem('end', temp2.getTime() + (temp2.getTimezoneOffset() * 60000))\n//         localStorage.setItem(\"start\", temp3.getTime() + (temp3.getTimezoneOffset() * 60000));\n//         let temp = localStorage.getItem('end') - Date.now();\n//         localStorage.setItem(\"day\", response.data.current_day);\n//         // setV(setTimeout(function () {\n//         //     AnsAlert(9);\n//         //     if (localStorage.getItem('day') === 3) {\n//         //       Router.push('/finale')\n//         //     }\n//         //     else if(response.data.error){\n//         //       Router.push('/error')\n//         //     }\n//         //     else {\n//         //       Router.push('/finale');\n//         //     }\n//         //   }, temp)\n//         // )\n//          setDay(localStorage.getItem('day')) \n//          setEnd(localStorage.getItem('end'))\n//           if (localStorage.getItem('day') == 3 && (localStorage.getItem('end') < Date.now())){\n//             console.log(\"finale\");\n//             Router.push('/finale')\n//           }\n//           if (!(localStorage.getItem(\"email\"))) {\n//             console.log(\"9\");\n//             AnsAlert(8)\n//             Router.push('/');\n//           }\n//           else if (!(localStorage.getItem('start') <= Date.now())) {\n//             console.log(\"8\");\n//             // AnsAlert(8)\n//             Router.push(\"/\");\n//           }\n//           else {\n//             getQuestions();\n//           }\n//         })\n//       .catch(err => {\n//         console.log(err)\n//         Router.push('/error')\n//       });\n//   },[]);\n//   const getQuestions =() => {\n//     axios\n//       .get(process.env.api + \"/api/question\", {\n//         headers: {\n//           Authorization: \"Bearer \" + localStorage.getItem(\"token\"),\n//         },\n//       })\n//       .then((response) => {\n//         if (response.data.quiz_finished) {\n//           clearTimeout(v);\n//           Router.push(\"/finale\");\n//         }\n//             setQuestions(response.data.question);\n//             setHint(response.data.hint);\n//             setQsNo(response.data.question_no);\n//             setAudio(response.data.audio);\n//             setImage(response.data.image);\n//         window.scrollTo(0, 0);\n//         window.scrollTo({\n//           top: 0,\n//           behavior: \"smooth\"\n//         });\n//         setLoaded(true);\n//       })\n//       .catch(err => {\n//         console.log(err)\n//         Router.push('/error')\n//       })\n//   }\n//   const submit = (event) => {\n//     //send final answer for checking\n//     event.preventDefault()\n//     checkAns(answer);\n//     setAnswer(\"\")\n//   };\n//   // submit2 = () => {\n//   //   //send final answer for checking\n//   //   console.log(this.state.answer);\n//   //   this.checkAns(this.state.answer);\n//   // };\n//   const change = (event) => {\n//     //keep updating answer\n//     let e = event.target.value;\n//     setAnswer(e)\n//   };\n//   //check answer from api and send for correct alert\n//   const checkAns=(ans)=> {\n//     axios\n//       .post(\n//         process.env.api + \"/api/checkanswer\",\n//         { answer: ans },\n//         {\n//           headers: {\n//             Authorization: \"Bearer \" + localStorage.getItem(\"token\"),\n//           },\n//         }\n//       )\n//       .then((response) => {\n//         let r = response.data.result;\n//         if (r && !response.data.quiz_finished) {\n//           setQsNo(qsNo+1);\n//           setAnswer(\"\");\n//           AnsAlert(1);\n//           setAnswer(\"\");\n//           getQuestions();\n//           props.handleLevel();\n//         } \n//         else if (r && response.data.quiz_finished) {\n//           AnsAlert(1);\n//           clearTimeout(v);\n//           Router.push(\"/finale\");\n//         } else {\n//           setAnswer(\"\");\n//           AnsAlert(0);\n//         }\n//       });\n//   };\n//     return (\n//       <>\n//         { (loaded === true) ?\n//           <Layout>\n//             <div\n//               style={{ marginRight: \"auto\", marginLeft: \"auto\", textAlign: \"center\", minHeight: \"100vh-100px\" }}\n//               questions\n//             >\n//               <Question qs={questions} qsNo={qsNo} audio={audio} image={image} day={day} level={props.level} userlevel={props.userlevel} loaded={props.loaded}handleLevel={props.handleLevel} isLoggedin={props.isLoggedin}/>\n//               <div>\n//                 <Answer\n//                   change={change}\n//                   answer={answer}\n//                   submit={submit}\n//                 />\n//                 <Hint hint={hint}\n//                   submit={submit}\n//                 // submit2={this.submit2}\n//                 />\n//                 <style jsx>{`\n//             div {\n//               text-align: center;\n//               margin: 5px;\n//               margin-bottom:100px;\n//             }\n//           `}</style>\n//           <div className=\"Ruleb\">\n//           <Rules>Rules</Rules>\n//           </div>\n//           </div>\n//               {/* <div className='footerBuff'>\n//               </div> */}\n//             </div>\n//             <div style={{display:\"inline-flex\", justifyContent:\"normal\",position:\"relative\"}}>\n//             {/* {Log && (\n//           <div className=\"userDetails-wrapper\">\n//             <div className=\"details-wrapper\">\n//               <GoogleLogout\n//                 render={(renderProps) => (\n//                   <div>\n//                     <Link href=\"/\">\n//                       <MenuItem onClick={logout}><Typography style={{ color: '#FFFFFF', fontFamily:\"'Russo One', sans-serif\", fontSize:18 }}>Logout</Typography></MenuItem>\n//                     </Link>\n//                   </div>\n//                 )}\n//                 onLogoutSuccess={logout}\n//               />\n//             </div>\n//           </div>\n//         ) } */}\n//         {/* <Rules>Rules</Rules> */}\n//         </div>\n//           </Layout>\n//           : <Loader />}\n//       </>\n//     )\n//           }\n\n\n\n\n\n\n\n // import data from '../env.json';\n\n\n\n // import Router from \"next/router\";\n\n\n\n\n // import Footers from \"./Footers\";\n\nfunction game(props) {\n  _s();\n\n  var _useState = Object(react__WEBPACK_IMPORTED_MODULE_2__[\"useState\"])(\"\"),\n      answer = _useState[0],\n      setAnswer = _useState[1],\n      _useState2 = Object(react__WEBPACK_IMPORTED_MODULE_2__[\"useState\"])(\"\"),\n      questions = _useState2[0],\n      setQuestions = _useState2[1],\n      _useState3 = Object(react__WEBPACK_IMPORTED_MODULE_2__[\"useState\"])(1),\n      qsNo = _useState3[0],\n      setQsNo = _useState3[1],\n      _useState4 = Object(react__WEBPACK_IMPORTED_MODULE_2__[\"useState\"])(\"\"),\n      audio = _useState4[0],\n      setAudio = _useState4[1],\n      _useState5 = Object(react__WEBPACK_IMPORTED_MODULE_2__[\"useState\"])(\"\"),\n      image = _useState5[0],\n      setImage = _useState5[1],\n      _useState6 = Object(react__WEBPACK_IMPORTED_MODULE_2__[\"useState\"])(false),\n      isLoggedIn = _useState6[0],\n      setIsLoggedIn = _useState6[1],\n      _useState7 = Object(react__WEBPACK_IMPORTED_MODULE_2__[\"useState\"])(\"\"),\n      hint = _useState7[0],\n      setHint = _useState7[1],\n      _useState8 = Object(react__WEBPACK_IMPORTED_MODULE_2__[\"useState\"])(\"\"),\n      day = _useState8[0],\n      setDay = _useState8[1],\n      _useState9 = Object(react__WEBPACK_IMPORTED_MODULE_2__[\"useState\"])(\"\"),\n      end = _useState9[0],\n      setEnd = _useState9[1],\n      _useState10 = Object(react__WEBPACK_IMPORTED_MODULE_2__[\"useState\"])(\"\"),\n      message = _useState10[0],\n      setMessage = _useState10[1],\n      _useState11 = Object(react__WEBPACK_IMPORTED_MODULE_2__[\"useState\"])(\"\"),\n      v = _useState11[0],\n      setV = _useState11[1],\n      _useState12 = Object(react__WEBPACK_IMPORTED_MODULE_2__[\"useState\"])(false),\n      loaded = _useState12[0],\n      setLoaded = _useState12[1];\n\n  var _useState13 = Object(react__WEBPACK_IMPORTED_MODULE_2__[\"useState\"])(false),\n      isSignedIn = _useState13[0],\n      setIsSigned = _useState13[1];\n\n  var _useState14 = Object(react__WEBPACK_IMPORTED_MODULE_2__[\"useState\"])(false),\n      quizFinished = _useState14[0],\n      setQuizFinished = _useState14[1];\n\n  Object(react__WEBPACK_IMPORTED_MODULE_2__[\"useEffect\"])(function () {\n    axios__WEBPACK_IMPORTED_MODULE_1___default.a.get(\"https://screencast.weblikate.com\" + \"/api/status\").then(function (response) {\n      var temp3 = new Date(response.data.start_time);\n      var temp2 = new Date(response.data.end_time);\n      localStorage.setItem('end', temp2.getTime() + temp2.getTimezoneOffset() * 60000);\n      localStorage.setItem(\"start\", temp3.getTime() + temp3.getTimezoneOffset() * 60000);\n      var temp = localStorage.getItem('end') - Date.now();\n      localStorage.setItem(\"day\", response.data.current_day);\n      setDay(localStorage.getItem('day'));\n      setEnd(localStorage.getItem('end'));\n\n      if (localStorage.getItem('day') == 3 && localStorage.getItem('end') < Date.now()) {\n        console.log(\"finale\"); // Router.push('/dashboard')\n      }\n\n      if (!localStorage.getItem(\"email\")) {\n        console.log(\"9\");\n        Object(_components_AnsAlert__WEBPACK_IMPORTED_MODULE_5__[\"default\"])(8);\n        next_router__WEBPACK_IMPORTED_MODULE_7___default.a.push('/');\n      } else if (!(localStorage.getItem('start') <= Date.now())) {\n        console.log(\"8\"); // AnsAlert(8)\n\n        next_router__WEBPACK_IMPORTED_MODULE_7___default.a.push(\"/\");\n      } else {\n        getQuestions();\n      }\n    })[\"catch\"](function (err) {\n      console.log(err);\n      next_router__WEBPACK_IMPORTED_MODULE_7___default.a.push('/error');\n    });\n  }, []);\n\n  var getQuestions = function getQuestions() {\n    axios__WEBPACK_IMPORTED_MODULE_1___default.a.get(\"https://screencast.weblikate.com\" + \"/api/question\", {\n      headers: {\n        Authorization: \"Bearer \" + localStorage.getItem(\"token\")\n      }\n    }).then(function (response) {\n      if (response.data.quiz_finished) {\n        clearTimeout(v);\n        setQuizFinished(true); // Router.push(\"/dashboard\");\n      }\n\n      setQuestions(response.data.question);\n      setHint(response.data.hint);\n      setQsNo(response.data.question_no);\n      setAudio(response.data.audio);\n      setImage(response.data.image);\n      window.scrollTo(0, 0);\n      window.scrollTo({\n        top: 0,\n        behavior: \"smooth\"\n      });\n      setLoaded(true);\n    })[\"catch\"](function (err) {\n      console.log(err);\n      next_router__WEBPACK_IMPORTED_MODULE_7___default.a.push('/error');\n    });\n  };\n\n  var submit = function submit(event) {\n    //send final answer for checking\n    event.preventDefault();\n    checkAns(answer);\n    setAnswer(\"\");\n  }; // submit2 = () => {\n  //   //send final answer for checking\n  //   console.log(this.state.answer);\n  //   this.checkAns(this.state.answer);\n  // };\n\n\n  var change = function change(event) {\n    //keep updating answer\n    var e = event.target.value;\n    setAnswer(e);\n  }; //check answer from api and send for correct alert\n\n\n  var checkAns = function checkAns(ans) {\n    axios__WEBPACK_IMPORTED_MODULE_1___default.a.post(\"https://screencast.weblikate.com\" + \"/api/checkanswer\", {\n      answer: ans\n    }, {\n      headers: {\n        Authorization: \"Bearer \" + localStorage.getItem(\"token\")\n      }\n    }).then(function (response) {\n      var r = response.data.result;\n\n      if (r && !response.data.quiz_finished) {\n        setQsNo(qsNo + 1);\n        setAnswer(\"\");\n        Object(_components_AnsAlert__WEBPACK_IMPORTED_MODULE_5__[\"default\"])(1);\n        setAnswer(\"\");\n        getQuestions();\n        props.handleLevel();\n      } else if (r && response.data.quiz_finished) {\n        Object(_components_AnsAlert__WEBPACK_IMPORTED_MODULE_5__[\"default\"])(1);\n        clearTimeout(v);\n        next_router__WEBPACK_IMPORTED_MODULE_7___default.a.push(\"/dashboard\");\n      } else {\n        setAnswer(\"\");\n        Object(_components_AnsAlert__WEBPACK_IMPORTED_MODULE_5__[\"default\"])(0);\n      }\n    });\n  };\n\n  return __jsx(react__WEBPACK_IMPORTED_MODULE_2___default.a.Fragment, null, loaded === true ? __jsx(_components_Layout__WEBPACK_IMPORTED_MODULE_8__[\"default\"], {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 453,\n      columnNumber: 11\n    }\n  }, __jsx(\"div\", {\n    style: {\n      marginRight: \"auto\",\n      marginLeft: \"auto\",\n      textAlign: \"center\",\n      minHeight: \"100vh-100px\"\n    },\n    questions: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 454,\n      columnNumber: 13\n    }\n  }, __jsx(_components_Question__WEBPACK_IMPORTED_MODULE_3__[\"default\"], {\n    qs: questions,\n    qsNo: qsNo,\n    audio: audio,\n    image: image,\n    day: day,\n    level: props.level,\n    userlevel: props.userlevel,\n    loaded: props.loaded,\n    handleLevel: props.handleLevel,\n    isLoggedin: props.isLoggedin,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 458,\n      columnNumber: 15\n    }\n  }), __jsx(\"div\", {\n    className: \"jsx-4141458270\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 459,\n      columnNumber: 15\n    }\n  }, __jsx(_components_Answer__WEBPACK_IMPORTED_MODULE_6__[\"default\"], {\n    change: change,\n    answer: answer,\n    submit: submit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 460,\n      columnNumber: 17\n    }\n  }), __jsx(_components_Hint__WEBPACK_IMPORTED_MODULE_4__[\"default\"], {\n    hint: hint,\n    submit: submit // submit2={this.submit2}\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 465,\n      columnNumber: 17\n    }\n  }), __jsx(styled_jsx_style__WEBPACK_IMPORTED_MODULE_0___default.a, {\n    id: \"4141458270\",\n    __self: this\n  }, \"div.jsx-4141458270{text-align:center;margin:5px;margin-bottom:100px;}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL3J1Y2hpa2EvRGVza3RvcC9UZXN0aW5nNC9TY3JlZW5jYXN0L2NvbXBvbmVudHMvTWFpbi5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFxZDRCLEFBR2lDLGtCQUNQLFdBQ1Esb0JBQ3JCIiwiZmlsZSI6Ii9ob21lL3J1Y2hpa2EvRGVza3RvcC9UZXN0aW5nNC9TY3JlZW5jYXN0L2NvbXBvbmVudHMvTWFpbi5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8vIGltcG9ydCBheGlvcyBmcm9tIFwiYXhpb3NcIjtcbi8vIGltcG9ydCBSZWFjdCBmcm9tIFwicmVhY3RcIjtcbi8vIGltcG9ydCB7IHVzZVN0YXRlLCB1c2VFZmZlY3QgfSBmcm9tIFwicmVhY3RcIjtcbi8vIGltcG9ydCBRdWVzdGlvbiBmcm9tIFwiLi4vY29tcG9uZW50cy9RdWVzdGlvblwiO1xuLy8gaW1wb3J0IEhpbnQgZnJvbSBcIi4uL2NvbXBvbmVudHMvSGludFwiO1xuLy8gaW1wb3J0IEFuc0FsZXJ0IGZyb20gXCIuLi9jb21wb25lbnRzL0Fuc0FsZXJ0XCI7XG4vLyBpbXBvcnQgQW5zd2VyIGZyb20gXCIuLi9jb21wb25lbnRzL0Fuc3dlclwiO1xuLy8gaW1wb3J0IFJvdXRlciBmcm9tIFwibmV4dC9yb3V0ZXJcIjtcbi8vIC8vIGltcG9ydCBkYXRhIGZyb20gJy4uL2Vudi5qc29uJztcbi8vIGltcG9ydCBMYXlvdXQgZnJvbSBcIi4uL2NvbXBvbmVudHMvTGF5b3V0XCI7XG4vLyBpbXBvcnQgTG9hZGVyIGZyb20gXCIuLi9jb21wb25lbnRzL0xvYWRlclwiO1xuLy8gaW1wb3J0IHsgR29vZ2xlTG9nb3V0IH0gZnJvbSBcInJlYWN0LWdvb2dsZS1sb2dpblwiO1xuLy8gLy8gaW1wb3J0IFJvdXRlciBmcm9tIFwibmV4dC9yb3V0ZXJcIjtcbi8vIGltcG9ydCBMaW5rIGZyb20gXCJuZXh0L2xpbmtcIjtcbi8vIGltcG9ydCBNZW51SXRlbSBmcm9tIFwiQG1hdGVyaWFsLXVpL2NvcmUvTWVudUl0ZW1cIjtcbi8vIGltcG9ydCB7IFR5cG9ncmFwaHkgfSBmcm9tIFwiQG1hdGVyaWFsLXVpL2NvcmVcIjtcbi8vIGltcG9ydCBSdWxlcyBmcm9tIFwiLi9SdWxlc1wiO1xuXG4vLyBleHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBnYW1lKHByb3BzKSB7XG4gIFxuICAgIFxuLy8gICAgICAgY29uc3QgW2Fuc3dlcixzZXRBbnN3ZXJdPSB1c2VTdGF0ZShcIlwiKSxcbi8vICAgICAgIFtxdWVzdGlvbnMsc2V0UXVlc3Rpb25zXT11c2VTdGF0ZShcIlwiKSxcbi8vICAgICAgIFtxc05vLHNldFFzTm9dPXVzZVN0YXRlKDEpLFxuLy8gICAgICAgW2F1ZGlvLHNldEF1ZGlvXT11c2VTdGF0ZShcIlwiKSxcbi8vICAgICAgIFtpbWFnZSxzZXRJbWFnZV09dXNlU3RhdGUoXCJcIiksXG4vLyAgICAgICBbaXNMb2dnZWRJbixzZXRJc0xvZ2dlZEluXT11c2VTdGF0ZSAoZmFsc2UpLFxuLy8gICAgICAgW2hpbnQsc2V0SGludF09dXNlU3RhdGUoXCJcIiksXG4vLyAgICAgICBbZGF5LHNldERheV09dXNlU3RhdGUoXCJcIiksXG4vLyAgICAgICBbZW5kLHNldEVuZF09dXNlU3RhdGUoXCJcIiksXG4vLyAgICAgICBbbWVzc2FnZSxzZXRNZXNzYWdlXT11c2VTdGF0ZShcIlwiKSxcbi8vICAgICAgIFt2LHNldFZdPXVzZVN0YXRlKFwiXCIpLFxuLy8gICAgICAgW2xvYWRlZCxzZXRMb2FkZWRdPXVzZVN0YXRlKGZhbHNlKVxuLy8gICAgICAgY29uc3QgW2lzU2lnbmVkSW4sIHNldElzU2lnbmVkXSA9IHVzZVN0YXRlKGZhbHNlKTtcbiAgICAgIFxuXG4vLyAgIC8vIGNvbnN0IFtuYW1lLCBzZXROYW1lXSA9IHVzZVN0YXRlKFwiXCIpO1xuLy8gICAvLyBjb25zdCBbaW1hZ2UsIHNldEltYWdlXSA9IHVzZVN0YXRlKFwiXCIpO1xuLy8gICAvLyBjb25zdCBbTG9nLCBzZXRMb2ddID0gdXNlU3RhdGUoZmFsc2UpO1xuXG4vLyAgIC8vIHVzZUVmZmVjdCgoKSA9PiB7XG4vLyAgIC8vICAgaWYgKGxvY2FsU3RvcmFnZS5nZXRJdGVtKFwiZW1haWxcIikpIHtcbi8vICAgLy8gICAgIHNldElzU2lnbmVkKHRydWUpO1xuLy8gICAvLyAgICAgc2V0TmFtZShsb2NhbFN0b3JhZ2UuZ2V0SXRlbShcIm5hbWVcIikpO1xuLy8gICAvLyAgICAgc2V0SW1hZ2UobG9jYWxTdG9yYWdlLmdldEl0ZW0oXCJpbWFnZVwiKSk7XG4vLyAgIC8vICAgICBzZXRMb2cobG9jYWxTdG9yYWdlLmdldEl0ZW0oXCJlbWFpbFwiKSk7XG4vLyAgIC8vICAgfVxuLy8gICAvLyB9KTtcbi8vICAgLy8gY29uc3QgbG9nb3V0ID0gKCkgPT4ge1xuLy8gICAvLyAgIC8vRkIubG9nb3V0KCk7XG4vLyAgIC8vICAgLy9jbGVhclRpbWVvdXQobG9jYWxTdG9yYWdlLmdldEl0ZW0oXCJpbnRlcnZhbF9pZFwiKSk7XG4gICAgXG4vLyAgIC8vICAgY29uc29sZS5sb2coXCJMYWR5XCIpXG4vLyAgIC8vICAgaWYobG9jYWxTdG9yYWdlLmdldEl0ZW0oJ3N0YXJ0Jyk8RGF0ZS5ub3coKSlcbi8vICAgLy8gICB7XG5cbi8vICAgLy8gICAgIGxvY2FsU3RvcmFnZS5yZW1vdmVJdGVtKCdlbWFpbCcpO1xuICAgICAgXG4vLyAgIC8vICAgICBSb3V0ZXIucHVzaCgnLycpXG4vLyAgIC8vICAgfVxuLy8gICAvLyAgIGVsc2Vcbi8vICAgLy8gICB7XG5cbi8vICAgLy8gICAgIGxvY2FsU3RvcmFnZS5yZW1vdmVJdGVtKCdlbWFpbCcpO1xuICAgICAgXG4vLyAgIC8vICAgICBSb3V0ZXIucmVsb2FkKCcvJylcbi8vICAgLy8gICB9XG4vLyAgIC8vIH07XG4gICAgXG5cbi8vICAgICAvLyB0aGlzLnN1Ym1pdCA9IHRoaXMuc3VibWl0LmJpbmQodGhpcyk7XG4vLyAgICAgLy8gdGhpcy5zdWJtaXQyID0gdGhpcy5zdWJtaXQyLmJpbmQodGhpcyk7XG4vLyAgICAgLy8gdGhpcy5jaGFuZ2UgPSB0aGlzLmNoYW5nZS5iaW5kKHRoaXMpO1xuLy8gICAgIC8vIHRoaXMuY2hlY2tBbnMgPSB0aGlzLmNoZWNrQW5zLmJpbmQodGhpcyk7XG4vLyAgICAgLy8gdGhpcy5nZXRRdWVzdGlvbnMgPSB0aGlzLmdldFF1ZXN0aW9ucy5iaW5kKHRoaXMpO1xuXG5cbi8vICAgICAgIHVzZUVmZmVjdCAoKCkgPT4ge1xuLy8gICAgIGF4aW9zXG4vLyAgICAgICAuZ2V0KHByb2Nlc3MuZW52LmFwaSArIFwiL2FwaS9zdGF0dXNcIilcbi8vICAgICAgIC50aGVuKChyZXNwb25zZSkgPT4ge1xuLy8gICAgICAgICB2YXIgdGVtcDMgPSBuZXcgRGF0ZShyZXNwb25zZS5kYXRhLnN0YXJ0X3RpbWUpO1xuLy8gICAgICAgICBsZXQgdGVtcDIgPSBuZXcgRGF0ZShyZXNwb25zZS5kYXRhLmVuZF90aW1lKTtcbi8vICAgICAgICAgbG9jYWxTdG9yYWdlLnNldEl0ZW0oJ2VuZCcsIHRlbXAyLmdldFRpbWUoKSArICh0ZW1wMi5nZXRUaW1lem9uZU9mZnNldCgpICogNjAwMDApKVxuLy8gICAgICAgICBsb2NhbFN0b3JhZ2Uuc2V0SXRlbShcInN0YXJ0XCIsIHRlbXAzLmdldFRpbWUoKSArICh0ZW1wMy5nZXRUaW1lem9uZU9mZnNldCgpICogNjAwMDApKTtcbi8vICAgICAgICAgbGV0IHRlbXAgPSBsb2NhbFN0b3JhZ2UuZ2V0SXRlbSgnZW5kJykgLSBEYXRlLm5vdygpO1xuLy8gICAgICAgICBsb2NhbFN0b3JhZ2Uuc2V0SXRlbShcImRheVwiLCByZXNwb25zZS5kYXRhLmN1cnJlbnRfZGF5KTtcblxuLy8gICAgICAgICAvLyBzZXRWKHNldFRpbWVvdXQoZnVuY3Rpb24gKCkge1xuLy8gICAgICAgICAvLyAgICAgQW5zQWxlcnQoOSk7XG4vLyAgICAgICAgIC8vICAgICBpZiAobG9jYWxTdG9yYWdlLmdldEl0ZW0oJ2RheScpID09PSAzKSB7XG5cbi8vICAgICAgICAgLy8gICAgICAgUm91dGVyLnB1c2goJy9maW5hbGUnKVxuLy8gICAgICAgICAvLyAgICAgfVxuLy8gICAgICAgICAvLyAgICAgZWxzZSBpZihyZXNwb25zZS5kYXRhLmVycm9yKXtcbi8vICAgICAgICAgLy8gICAgICAgUm91dGVyLnB1c2goJy9lcnJvcicpXG4vLyAgICAgICAgIC8vICAgICB9XG4vLyAgICAgICAgIC8vICAgICBlbHNlIHtcbi8vICAgICAgICAgLy8gICAgICAgUm91dGVyLnB1c2goJy9maW5hbGUnKTtcbi8vICAgICAgICAgLy8gICAgIH1cbi8vICAgICAgICAgLy8gICB9LCB0ZW1wKVxuLy8gICAgICAgICAvLyApXG5cbi8vICAgICAgICAgIHNldERheShsb2NhbFN0b3JhZ2UuZ2V0SXRlbSgnZGF5JykpIFxuLy8gICAgICAgICAgc2V0RW5kKGxvY2FsU3RvcmFnZS5nZXRJdGVtKCdlbmQnKSlcbi8vICAgICAgICAgICBpZiAobG9jYWxTdG9yYWdlLmdldEl0ZW0oJ2RheScpID09IDMgJiYgKGxvY2FsU3RvcmFnZS5nZXRJdGVtKCdlbmQnKSA8IERhdGUubm93KCkpKXtcbi8vICAgICAgICAgICAgIGNvbnNvbGUubG9nKFwiZmluYWxlXCIpO1xuLy8gICAgICAgICAgICAgUm91dGVyLnB1c2goJy9maW5hbGUnKVxuLy8gICAgICAgICAgIH1cbiAgICAgICAgICAgIFxuLy8gICAgICAgICAgIGlmICghKGxvY2FsU3RvcmFnZS5nZXRJdGVtKFwiZW1haWxcIikpKSB7XG4vLyAgICAgICAgICAgICBjb25zb2xlLmxvZyhcIjlcIik7XG4vLyAgICAgICAgICAgICBBbnNBbGVydCg4KVxuLy8gICAgICAgICAgICAgUm91dGVyLnB1c2goJy8nKTtcbi8vICAgICAgICAgICB9XG4vLyAgICAgICAgICAgZWxzZSBpZiAoIShsb2NhbFN0b3JhZ2UuZ2V0SXRlbSgnc3RhcnQnKSA8PSBEYXRlLm5vdygpKSkge1xuLy8gICAgICAgICAgICAgY29uc29sZS5sb2coXCI4XCIpO1xuLy8gICAgICAgICAgICAgLy8gQW5zQWxlcnQoOClcbi8vICAgICAgICAgICAgIFJvdXRlci5wdXNoKFwiL1wiKTtcbi8vICAgICAgICAgICB9XG4vLyAgICAgICAgICAgZWxzZSB7XG4vLyAgICAgICAgICAgICBnZXRRdWVzdGlvbnMoKTtcbi8vICAgICAgICAgICB9XG4gICAgICAgIFxuLy8gICAgICAgICB9KVxuLy8gICAgICAgLmNhdGNoKGVyciA9PiB7XG4vLyAgICAgICAgIGNvbnNvbGUubG9nKGVycilcbi8vICAgICAgICAgUm91dGVyLnB1c2goJy9lcnJvcicpXG4vLyAgICAgICB9KTtcbi8vICAgfSxbXSk7XG5cbi8vICAgY29uc3QgZ2V0UXVlc3Rpb25zID0oKSA9PiB7XG4gICAgXG4vLyAgICAgYXhpb3Ncbi8vICAgICAgIC5nZXQocHJvY2Vzcy5lbnYuYXBpICsgXCIvYXBpL3F1ZXN0aW9uXCIsIHtcbi8vICAgICAgICAgaGVhZGVyczoge1xuLy8gICAgICAgICAgIEF1dGhvcml6YXRpb246IFwiQmVhcmVyIFwiICsgbG9jYWxTdG9yYWdlLmdldEl0ZW0oXCJ0b2tlblwiKSxcbi8vICAgICAgICAgfSxcbi8vICAgICAgIH0pXG4vLyAgICAgICAudGhlbigocmVzcG9uc2UpID0+IHtcbi8vICAgICAgICAgaWYgKHJlc3BvbnNlLmRhdGEucXVpel9maW5pc2hlZCkge1xuLy8gICAgICAgICAgIGNsZWFyVGltZW91dCh2KTtcbi8vICAgICAgICAgICBSb3V0ZXIucHVzaChcIi9maW5hbGVcIik7XG4vLyAgICAgICAgIH1cbiAgICAgICAgXG4vLyAgICAgICAgICAgICBzZXRRdWVzdGlvbnMocmVzcG9uc2UuZGF0YS5xdWVzdGlvbik7XG4vLyAgICAgICAgICAgICBzZXRIaW50KHJlc3BvbnNlLmRhdGEuaGludCk7XG4vLyAgICAgICAgICAgICBzZXRRc05vKHJlc3BvbnNlLmRhdGEucXVlc3Rpb25fbm8pO1xuLy8gICAgICAgICAgICAgc2V0QXVkaW8ocmVzcG9uc2UuZGF0YS5hdWRpbyk7XG4vLyAgICAgICAgICAgICBzZXRJbWFnZShyZXNwb25zZS5kYXRhLmltYWdlKTtcbiAgICAgICAgICBcbi8vICAgICAgICAgd2luZG93LnNjcm9sbFRvKDAsIDApO1xuLy8gICAgICAgICB3aW5kb3cuc2Nyb2xsVG8oe1xuLy8gICAgICAgICAgIHRvcDogMCxcbi8vICAgICAgICAgICBiZWhhdmlvcjogXCJzbW9vdGhcIlxuLy8gICAgICAgICB9KTtcbi8vICAgICAgICAgc2V0TG9hZGVkKHRydWUpO1xuLy8gICAgICAgfSlcbi8vICAgICAgIC5jYXRjaChlcnIgPT4ge1xuLy8gICAgICAgICBjb25zb2xlLmxvZyhlcnIpXG4vLyAgICAgICAgIFJvdXRlci5wdXNoKCcvZXJyb3InKVxuLy8gICAgICAgfSlcbiAgICBcbi8vICAgfVxuXG4vLyAgIGNvbnN0IHN1Ym1pdCA9IChldmVudCkgPT4ge1xuLy8gICAgIC8vc2VuZCBmaW5hbCBhbnN3ZXIgZm9yIGNoZWNraW5nXG4vLyAgICAgZXZlbnQucHJldmVudERlZmF1bHQoKVxuLy8gICAgIGNoZWNrQW5zKGFuc3dlcik7XG4vLyAgICAgc2V0QW5zd2VyKFwiXCIpXG4vLyAgIH07XG4vLyAgIC8vIHN1Ym1pdDIgPSAoKSA9PiB7XG4vLyAgIC8vICAgLy9zZW5kIGZpbmFsIGFuc3dlciBmb3IgY2hlY2tpbmdcbi8vICAgLy8gICBjb25zb2xlLmxvZyh0aGlzLnN0YXRlLmFuc3dlcik7XG4vLyAgIC8vICAgdGhpcy5jaGVja0Fucyh0aGlzLnN0YXRlLmFuc3dlcik7XG4vLyAgIC8vIH07XG5cbi8vICAgY29uc3QgY2hhbmdlID0gKGV2ZW50KSA9PiB7XG4vLyAgICAgLy9rZWVwIHVwZGF0aW5nIGFuc3dlclxuLy8gICAgIGxldCBlID0gZXZlbnQudGFyZ2V0LnZhbHVlO1xuLy8gICAgIHNldEFuc3dlcihlKVxuLy8gICB9O1xuLy8gICAvL2NoZWNrIGFuc3dlciBmcm9tIGFwaSBhbmQgc2VuZCBmb3IgY29ycmVjdCBhbGVydFxuLy8gICBjb25zdCBjaGVja0Fucz0oYW5zKT0+IHtcbi8vICAgICBheGlvc1xuLy8gICAgICAgLnBvc3QoXG4vLyAgICAgICAgIHByb2Nlc3MuZW52LmFwaSArIFwiL2FwaS9jaGVja2Fuc3dlclwiLFxuLy8gICAgICAgICB7IGFuc3dlcjogYW5zIH0sXG4vLyAgICAgICAgIHtcbi8vICAgICAgICAgICBoZWFkZXJzOiB7XG4vLyAgICAgICAgICAgICBBdXRob3JpemF0aW9uOiBcIkJlYXJlciBcIiArIGxvY2FsU3RvcmFnZS5nZXRJdGVtKFwidG9rZW5cIiksXG4vLyAgICAgICAgICAgfSxcbi8vICAgICAgICAgfVxuLy8gICAgICAgKVxuLy8gICAgICAgLnRoZW4oKHJlc3BvbnNlKSA9PiB7XG4vLyAgICAgICAgIGxldCByID0gcmVzcG9uc2UuZGF0YS5yZXN1bHQ7XG4vLyAgICAgICAgIGlmIChyICYmICFyZXNwb25zZS5kYXRhLnF1aXpfZmluaXNoZWQpIHtcbi8vICAgICAgICAgICBzZXRRc05vKHFzTm8rMSk7XG4vLyAgICAgICAgICAgc2V0QW5zd2VyKFwiXCIpO1xuLy8gICAgICAgICAgIEFuc0FsZXJ0KDEpO1xuLy8gICAgICAgICAgIHNldEFuc3dlcihcIlwiKTtcbi8vICAgICAgICAgICBnZXRRdWVzdGlvbnMoKTtcbi8vICAgICAgICAgICBwcm9wcy5oYW5kbGVMZXZlbCgpO1xuLy8gICAgICAgICB9IFxuLy8gICAgICAgICBlbHNlIGlmIChyICYmIHJlc3BvbnNlLmRhdGEucXVpel9maW5pc2hlZCkge1xuLy8gICAgICAgICAgIEFuc0FsZXJ0KDEpO1xuLy8gICAgICAgICAgIGNsZWFyVGltZW91dCh2KTtcbi8vICAgICAgICAgICBSb3V0ZXIucHVzaChcIi9maW5hbGVcIik7XG4vLyAgICAgICAgIH0gZWxzZSB7XG4vLyAgICAgICAgICAgc2V0QW5zd2VyKFwiXCIpO1xuLy8gICAgICAgICAgIEFuc0FsZXJ0KDApO1xuLy8gICAgICAgICB9XG4vLyAgICAgICB9KTtcbi8vICAgfTtcblxuXG4gIFxuLy8gICAgIHJldHVybiAoXG4vLyAgICAgICA8PlxuLy8gICAgICAgICB7IChsb2FkZWQgPT09IHRydWUpID9cbi8vICAgICAgICAgICA8TGF5b3V0PlxuLy8gICAgICAgICAgICAgPGRpdlxuLy8gICAgICAgICAgICAgICBzdHlsZT17eyBtYXJnaW5SaWdodDogXCJhdXRvXCIsIG1hcmdpbkxlZnQ6IFwiYXV0b1wiLCB0ZXh0QWxpZ246IFwiY2VudGVyXCIsIG1pbkhlaWdodDogXCIxMDB2aC0xMDBweFwiIH19XG4vLyAgICAgICAgICAgICAgIHF1ZXN0aW9uc1xuLy8gICAgICAgICAgICAgPlxuLy8gICAgICAgICAgICAgICA8UXVlc3Rpb24gcXM9e3F1ZXN0aW9uc30gcXNObz17cXNOb30gYXVkaW89e2F1ZGlvfSBpbWFnZT17aW1hZ2V9IGRheT17ZGF5fSBsZXZlbD17cHJvcHMubGV2ZWx9IHVzZXJsZXZlbD17cHJvcHMudXNlcmxldmVsfSBsb2FkZWQ9e3Byb3BzLmxvYWRlZH1oYW5kbGVMZXZlbD17cHJvcHMuaGFuZGxlTGV2ZWx9IGlzTG9nZ2VkaW49e3Byb3BzLmlzTG9nZ2VkaW59Lz5cbi8vICAgICAgICAgICAgICAgPGRpdj5cbi8vICAgICAgICAgICAgICAgICA8QW5zd2VyXG4vLyAgICAgICAgICAgICAgICAgICBjaGFuZ2U9e2NoYW5nZX1cbi8vICAgICAgICAgICAgICAgICAgIGFuc3dlcj17YW5zd2VyfVxuLy8gICAgICAgICAgICAgICAgICAgc3VibWl0PXtzdWJtaXR9XG4vLyAgICAgICAgICAgICAgICAgLz5cbi8vICAgICAgICAgICAgICAgICA8SGludCBoaW50PXtoaW50fVxuLy8gICAgICAgICAgICAgICAgICAgc3VibWl0PXtzdWJtaXR9XG4vLyAgICAgICAgICAgICAgICAgLy8gc3VibWl0Mj17dGhpcy5zdWJtaXQyfVxuLy8gICAgICAgICAgICAgICAgIC8+XG4gICAgICAgICAgICAgICAgXG4vLyAgICAgICAgICAgICAgICAgPHN0eWxlIGpzeD57YFxuLy8gICAgICAgICAgICAgZGl2IHtcbi8vICAgICAgICAgICAgICAgdGV4dC1hbGlnbjogY2VudGVyO1xuLy8gICAgICAgICAgICAgICBtYXJnaW46IDVweDtcbi8vICAgICAgICAgICAgICAgbWFyZ2luLWJvdHRvbToxMDBweDtcbi8vICAgICAgICAgICAgIH1cbi8vICAgICAgICAgICBgfTwvc3R5bGU+XG4vLyAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJSdWxlYlwiPlxuLy8gICAgICAgICAgIDxSdWxlcz5SdWxlczwvUnVsZXM+XG4vLyAgICAgICAgICAgPC9kaXY+XG4vLyAgICAgICAgICAgPC9kaXY+XG4vLyAgICAgICAgICAgICAgIHsvKiA8ZGl2IGNsYXNzTmFtZT0nZm9vdGVyQnVmZic+XG5cbi8vICAgICAgICAgICAgICAgPC9kaXY+ICovfVxuLy8gICAgICAgICAgICAgPC9kaXY+XG4vLyAgICAgICAgICAgICA8ZGl2IHN0eWxlPXt7ZGlzcGxheTpcImlubGluZS1mbGV4XCIsIGp1c3RpZnlDb250ZW50Olwibm9ybWFsXCIscG9zaXRpb246XCJyZWxhdGl2ZVwifX0+XG4vLyAgICAgICAgICAgICB7Lyoge0xvZyAmJiAoXG4vLyAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJ1c2VyRGV0YWlscy13cmFwcGVyXCI+XG4vLyAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImRldGFpbHMtd3JhcHBlclwiPlxuLy8gICAgICAgICAgICAgICA8R29vZ2xlTG9nb3V0XG4vLyAgICAgICAgICAgICAgICAgcmVuZGVyPXsocmVuZGVyUHJvcHMpID0+IChcbi8vICAgICAgICAgICAgICAgICAgIDxkaXY+XG4vLyAgICAgICAgICAgICAgICAgICAgIDxMaW5rIGhyZWY9XCIvXCI+XG4vLyAgICAgICAgICAgICAgICAgICAgICAgPE1lbnVJdGVtIG9uQ2xpY2s9e2xvZ291dH0+PFR5cG9ncmFwaHkgc3R5bGU9e3sgY29sb3I6ICcjRkZGRkZGJywgZm9udEZhbWlseTpcIidSdXNzbyBPbmUnLCBzYW5zLXNlcmlmXCIsIGZvbnRTaXplOjE4IH19PkxvZ291dDwvVHlwb2dyYXBoeT48L01lbnVJdGVtPlxuLy8gICAgICAgICAgICAgICAgICAgICA8L0xpbms+XG4vLyAgICAgICAgICAgICAgICAgICA8L2Rpdj5cbi8vICAgICAgICAgICAgICAgICApfVxuLy8gICAgICAgICAgICAgICAgIG9uTG9nb3V0U3VjY2Vzcz17bG9nb3V0fVxuLy8gICAgICAgICAgICAgICAvPlxuLy8gICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICBcbiAgICAgICAgICBcbi8vICAgICAgICAgICA8L2Rpdj5cbi8vICAgICAgICAgKSB9ICovfVxuLy8gICAgICAgICB7LyogPFJ1bGVzPlJ1bGVzPC9SdWxlcz4gKi99XG4vLyAgICAgICAgIDwvZGl2PlxuICAgICAgICBcbi8vICAgICAgICAgICA8L0xheW91dD5cbi8vICAgICAgICAgICA6IDxMb2FkZXIgLz59XG4vLyAgICAgICA8Lz5cbi8vICAgICApXG4gICAgICAgICAgXG4vLyAgICAgICAgICAgfVxuXG5pbXBvcnQgYXhpb3MgZnJvbSBcImF4aW9zXCI7XG5pbXBvcnQgUmVhY3QgZnJvbSBcInJlYWN0XCI7XG5pbXBvcnQgeyB1c2VTdGF0ZSwgdXNlRWZmZWN0IH0gZnJvbSBcInJlYWN0XCI7XG5pbXBvcnQgUXVlc3Rpb24gZnJvbSBcIi4uL2NvbXBvbmVudHMvUXVlc3Rpb25cIjtcbmltcG9ydCBIaW50IGZyb20gXCIuLi9jb21wb25lbnRzL0hpbnRcIjtcbmltcG9ydCBBbnNBbGVydCBmcm9tIFwiLi4vY29tcG9uZW50cy9BbnNBbGVydFwiO1xuaW1wb3J0IEFuc3dlciBmcm9tIFwiLi4vY29tcG9uZW50cy9BbnN3ZXJcIjtcbmltcG9ydCBSb3V0ZXIgZnJvbSBcIm5leHQvcm91dGVyXCI7XG4vLyBpbXBvcnQgZGF0YSBmcm9tICcuLi9lbnYuanNvbic7XG5pbXBvcnQgTGF5b3V0IGZyb20gXCIuLi9jb21wb25lbnRzL0xheW91dFwiO1xuaW1wb3J0IExvYWRlciBmcm9tIFwiLi4vY29tcG9uZW50cy9Mb2FkZXJcIjtcbmltcG9ydCB7IEdvb2dsZUxvZ291dCB9IGZyb20gXCJyZWFjdC1nb29nbGUtbG9naW5cIjtcbi8vIGltcG9ydCBSb3V0ZXIgZnJvbSBcIm5leHQvcm91dGVyXCI7XG5pbXBvcnQgTGluayBmcm9tIFwibmV4dC9saW5rXCI7XG5pbXBvcnQgTWVudUl0ZW0gZnJvbSBcIkBtYXRlcmlhbC11aS9jb3JlL01lbnVJdGVtXCI7XG5pbXBvcnQgeyBUeXBvZ3JhcGh5IH0gZnJvbSBcIkBtYXRlcmlhbC11aS9jb3JlXCI7XG5pbXBvcnQgUnVsZXMgZnJvbSBcIi4vUnVsZXNcIjtcbi8vIGltcG9ydCBGb290ZXJzIGZyb20gXCIuL0Zvb3RlcnNcIjtcblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gZ2FtZShwcm9wcykge1xuICBcbiAgICBcbiAgICAgIGNvbnN0IFthbnN3ZXIsc2V0QW5zd2VyXT0gdXNlU3RhdGUoXCJcIiksXG4gICAgICBbcXVlc3Rpb25zLHNldFF1ZXN0aW9uc109dXNlU3RhdGUoXCJcIiksXG4gICAgICBbcXNObyxzZXRRc05vXT11c2VTdGF0ZSgxKSxcbiAgICAgIFthdWRpbyxzZXRBdWRpb109dXNlU3RhdGUoXCJcIiksXG4gICAgICBbaW1hZ2Usc2V0SW1hZ2VdPXVzZVN0YXRlKFwiXCIpLFxuICAgICAgW2lzTG9nZ2VkSW4sc2V0SXNMb2dnZWRJbl09dXNlU3RhdGUgKGZhbHNlKSxcbiAgICAgIFtoaW50LHNldEhpbnRdPXVzZVN0YXRlKFwiXCIpLFxuICAgICAgW2RheSxzZXREYXldPXVzZVN0YXRlKFwiXCIpLFxuICAgICAgW2VuZCxzZXRFbmRdPXVzZVN0YXRlKFwiXCIpLFxuICAgICAgW21lc3NhZ2Usc2V0TWVzc2FnZV09dXNlU3RhdGUoXCJcIiksXG4gICAgICBbdixzZXRWXT11c2VTdGF0ZShcIlwiKSxcbiAgICAgIFtsb2FkZWQsc2V0TG9hZGVkXT11c2VTdGF0ZShmYWxzZSlcbiAgICAgIGNvbnN0IFtpc1NpZ25lZEluLCBzZXRJc1NpZ25lZF0gPSB1c2VTdGF0ZShmYWxzZSk7XG4gICAgICBjb25zdCBbcXVpekZpbmlzaGVkLCBzZXRRdWl6RmluaXNoZWRdPSB1c2VTdGF0ZShmYWxzZSk7XG4gICAgICBcblxuICBcblxuICAgICAgdXNlRWZmZWN0ICgoKSA9PiB7XG4gICAgYXhpb3NcbiAgICAgIC5nZXQocHJvY2Vzcy5lbnYuYXBpICsgXCIvYXBpL3N0YXR1c1wiKVxuICAgICAgLnRoZW4oKHJlc3BvbnNlKSA9PiB7XG4gICAgICAgIHZhciB0ZW1wMyA9IG5ldyBEYXRlKHJlc3BvbnNlLmRhdGEuc3RhcnRfdGltZSk7XG4gICAgICAgIGxldCB0ZW1wMiA9IG5ldyBEYXRlKHJlc3BvbnNlLmRhdGEuZW5kX3RpbWUpO1xuICAgICAgICBsb2NhbFN0b3JhZ2Uuc2V0SXRlbSgnZW5kJywgdGVtcDIuZ2V0VGltZSgpICsgKHRlbXAyLmdldFRpbWV6b25lT2Zmc2V0KCkgKiA2MDAwMCkpXG4gICAgICAgIGxvY2FsU3RvcmFnZS5zZXRJdGVtKFwic3RhcnRcIiwgdGVtcDMuZ2V0VGltZSgpICsgKHRlbXAzLmdldFRpbWV6b25lT2Zmc2V0KCkgKiA2MDAwMCkpO1xuICAgICAgICBsZXQgdGVtcCA9IGxvY2FsU3RvcmFnZS5nZXRJdGVtKCdlbmQnKSAtIERhdGUubm93KCk7XG4gICAgICAgIGxvY2FsU3RvcmFnZS5zZXRJdGVtKFwiZGF5XCIsIHJlc3BvbnNlLmRhdGEuY3VycmVudF9kYXkpO1xuXG4gICAgICAgIFxuXG4gICAgICAgICBzZXREYXkobG9jYWxTdG9yYWdlLmdldEl0ZW0oJ2RheScpKSBcbiAgICAgICAgIHNldEVuZChsb2NhbFN0b3JhZ2UuZ2V0SXRlbSgnZW5kJykpXG4gICAgICAgICAgaWYgKGxvY2FsU3RvcmFnZS5nZXRJdGVtKCdkYXknKSA9PSAzICYmIChsb2NhbFN0b3JhZ2UuZ2V0SXRlbSgnZW5kJykgPCBEYXRlLm5vdygpKSl7XG4gICAgICAgICAgICBjb25zb2xlLmxvZyhcImZpbmFsZVwiKTtcbiAgICAgICAgICAgIC8vIFJvdXRlci5wdXNoKCcvZGFzaGJvYXJkJylcbiAgICAgICAgICB9XG4gICAgICAgICAgICBcbiAgICAgICAgICBpZiAoIShsb2NhbFN0b3JhZ2UuZ2V0SXRlbShcImVtYWlsXCIpKSkge1xuICAgICAgICAgICAgY29uc29sZS5sb2coXCI5XCIpO1xuICAgICAgICAgICAgQW5zQWxlcnQoOClcbiAgICAgICAgICAgIFJvdXRlci5wdXNoKCcvJyk7XG4gICAgICAgICAgfVxuICAgICAgICAgIGVsc2UgaWYgKCEobG9jYWxTdG9yYWdlLmdldEl0ZW0oJ3N0YXJ0JykgPD0gRGF0ZS5ub3coKSkpIHtcbiAgICAgICAgICAgIGNvbnNvbGUubG9nKFwiOFwiKTtcbiAgICAgICAgICAgIC8vIEFuc0FsZXJ0KDgpXG4gICAgICAgICAgICBSb3V0ZXIucHVzaChcIi9cIik7XG4gICAgICAgICAgfVxuICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgZ2V0UXVlc3Rpb25zKCk7XG4gICAgICAgICAgfVxuICAgICAgICBcbiAgICAgICAgfSlcbiAgICAgIC5jYXRjaChlcnIgPT4ge1xuICAgICAgICBjb25zb2xlLmxvZyhlcnIpXG4gICAgICAgIFJvdXRlci5wdXNoKCcvZXJyb3InKVxuICAgICAgfSk7XG4gIH0sW10pO1xuXG4gIGNvbnN0IGdldFF1ZXN0aW9ucyA9KCkgPT4ge1xuICAgIFxuICAgIGF4aW9zXG4gICAgICAuZ2V0KHByb2Nlc3MuZW52LmFwaSArIFwiL2FwaS9xdWVzdGlvblwiLCB7XG4gICAgICAgIGhlYWRlcnM6IHtcbiAgICAgICAgICBBdXRob3JpemF0aW9uOiBcIkJlYXJlciBcIiArIGxvY2FsU3RvcmFnZS5nZXRJdGVtKFwidG9rZW5cIiksXG4gICAgICAgIH0sXG4gICAgICB9KVxuICAgICAgLnRoZW4oKHJlc3BvbnNlKSA9PiB7XG4gICAgICAgIGlmIChyZXNwb25zZS5kYXRhLnF1aXpfZmluaXNoZWQpIHtcbiAgICAgICAgICBjbGVhclRpbWVvdXQodik7XG4gICAgICAgICAgc2V0UXVpekZpbmlzaGVkKHRydWUpO1xuICAgICAgICAgIC8vIFJvdXRlci5wdXNoKFwiL2Rhc2hib2FyZFwiKTtcbiAgICAgICAgfVxuICAgICAgICBcbiAgICAgICAgICAgIHNldFF1ZXN0aW9ucyhyZXNwb25zZS5kYXRhLnF1ZXN0aW9uKTtcbiAgICAgICAgICAgIHNldEhpbnQocmVzcG9uc2UuZGF0YS5oaW50KTtcbiAgICAgICAgICAgIHNldFFzTm8ocmVzcG9uc2UuZGF0YS5xdWVzdGlvbl9ubyk7XG4gICAgICAgICAgICBzZXRBdWRpbyhyZXNwb25zZS5kYXRhLmF1ZGlvKTtcbiAgICAgICAgICAgIHNldEltYWdlKHJlc3BvbnNlLmRhdGEuaW1hZ2UpO1xuICAgICAgICAgIFxuICAgICAgICB3aW5kb3cuc2Nyb2xsVG8oMCwgMCk7XG4gICAgICAgIHdpbmRvdy5zY3JvbGxUbyh7XG4gICAgICAgICAgdG9wOiAwLFxuICAgICAgICAgIGJlaGF2aW9yOiBcInNtb290aFwiXG4gICAgICAgIH0pO1xuICAgICAgICBzZXRMb2FkZWQodHJ1ZSk7XG4gICAgICB9KVxuICAgICAgLmNhdGNoKGVyciA9PiB7XG4gICAgICAgIGNvbnNvbGUubG9nKGVycilcbiAgICAgICAgUm91dGVyLnB1c2goJy9lcnJvcicpXG4gICAgICB9KVxuICAgIFxuICB9XG5cbiAgY29uc3Qgc3VibWl0ID0gKGV2ZW50KSA9PiB7XG4gICAgLy9zZW5kIGZpbmFsIGFuc3dlciBmb3IgY2hlY2tpbmdcbiAgICBldmVudC5wcmV2ZW50RGVmYXVsdCgpXG4gICAgY2hlY2tBbnMoYW5zd2VyKTtcbiAgICBzZXRBbnN3ZXIoXCJcIilcbiAgfTtcbiAgLy8gc3VibWl0MiA9ICgpID0+IHtcbiAgLy8gICAvL3NlbmQgZmluYWwgYW5zd2VyIGZvciBjaGVja2luZ1xuICAvLyAgIGNvbnNvbGUubG9nKHRoaXMuc3RhdGUuYW5zd2VyKTtcbiAgLy8gICB0aGlzLmNoZWNrQW5zKHRoaXMuc3RhdGUuYW5zd2VyKTtcbiAgLy8gfTtcblxuICBjb25zdCBjaGFuZ2UgPSAoZXZlbnQpID0+IHtcbiAgICAvL2tlZXAgdXBkYXRpbmcgYW5zd2VyXG4gICAgbGV0IGUgPSBldmVudC50YXJnZXQudmFsdWU7XG4gICAgc2V0QW5zd2VyKGUpXG4gIH07XG4gIC8vY2hlY2sgYW5zd2VyIGZyb20gYXBpIGFuZCBzZW5kIGZvciBjb3JyZWN0IGFsZXJ0XG4gIGNvbnN0IGNoZWNrQW5zPShhbnMpPT4ge1xuICAgIGF4aW9zXG4gICAgICAucG9zdChcbiAgICAgICAgcHJvY2Vzcy5lbnYuYXBpICsgXCIvYXBpL2NoZWNrYW5zd2VyXCIsXG4gICAgICAgIHsgYW5zd2VyOiBhbnMgfSxcbiAgICAgICAge1xuICAgICAgICAgIGhlYWRlcnM6IHtcbiAgICAgICAgICAgIEF1dGhvcml6YXRpb246IFwiQmVhcmVyIFwiICsgbG9jYWxTdG9yYWdlLmdldEl0ZW0oXCJ0b2tlblwiKSxcbiAgICAgICAgICB9LFxuICAgICAgICB9XG4gICAgICApXG4gICAgICAudGhlbigocmVzcG9uc2UpID0+IHtcbiAgICAgICAgbGV0IHIgPSByZXNwb25zZS5kYXRhLnJlc3VsdDtcbiAgICAgICAgaWYgKHIgJiYgIXJlc3BvbnNlLmRhdGEucXVpel9maW5pc2hlZCkge1xuICAgICAgICAgIHNldFFzTm8ocXNObysxKTtcbiAgICAgICAgICBzZXRBbnN3ZXIoXCJcIik7XG4gICAgICAgICAgQW5zQWxlcnQoMSk7XG4gICAgICAgICAgc2V0QW5zd2VyKFwiXCIpO1xuICAgICAgICAgIGdldFF1ZXN0aW9ucygpO1xuICAgICAgICAgIHByb3BzLmhhbmRsZUxldmVsKCk7XG4gICAgICAgIH0gXG4gICAgICAgIGVsc2UgaWYgKHIgJiYgcmVzcG9uc2UuZGF0YS5xdWl6X2ZpbmlzaGVkKSB7XG4gICAgICAgICAgQW5zQWxlcnQoMSk7XG4gICAgICAgICAgY2xlYXJUaW1lb3V0KHYpO1xuICAgICAgICAgIFJvdXRlci5wdXNoKFwiL2Rhc2hib2FyZFwiKTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBzZXRBbnN3ZXIoXCJcIik7XG4gICAgICAgICAgQW5zQWxlcnQoMCk7XG4gICAgICAgIH1cbiAgICAgIH0pO1xuICB9O1xuXG5cbiAgXG4gICAgcmV0dXJuIChcbiAgICAgIDw+XG4gICAgICAgIHsgKGxvYWRlZCA9PT0gdHJ1ZSkgP1xuICAgICAgICAgIDxMYXlvdXQ+XG4gICAgICAgICAgICA8ZGl2XG4gICAgICAgICAgICAgIHN0eWxlPXt7IG1hcmdpblJpZ2h0OiBcImF1dG9cIiwgbWFyZ2luTGVmdDogXCJhdXRvXCIsIHRleHRBbGlnbjogXCJjZW50ZXJcIiwgbWluSGVpZ2h0OiBcIjEwMHZoLTEwMHB4XCIgfX1cbiAgICAgICAgICAgICAgcXVlc3Rpb25zXG4gICAgICAgICAgICA+XG4gICAgICAgICAgICAgIDxRdWVzdGlvbiBxcz17cXVlc3Rpb25zfSBxc05vPXtxc05vfSBhdWRpbz17YXVkaW99IGltYWdlPXtpbWFnZX0gZGF5PXtkYXl9IGxldmVsPXtwcm9wcy5sZXZlbH0gdXNlcmxldmVsPXtwcm9wcy51c2VybGV2ZWx9IGxvYWRlZD17cHJvcHMubG9hZGVkfWhhbmRsZUxldmVsPXtwcm9wcy5oYW5kbGVMZXZlbH0gaXNMb2dnZWRpbj17cHJvcHMuaXNMb2dnZWRpbn0vPlxuICAgICAgICAgICAgICA8ZGl2PlxuICAgICAgICAgICAgICAgIDxBbnN3ZXJcbiAgICAgICAgICAgICAgICAgIGNoYW5nZT17Y2hhbmdlfVxuICAgICAgICAgICAgICAgICAgYW5zd2VyPXthbnN3ZXJ9XG4gICAgICAgICAgICAgICAgICBzdWJtaXQ9e3N1Ym1pdH1cbiAgICAgICAgICAgICAgICAvPlxuICAgICAgICAgICAgICAgIDxIaW50IGhpbnQ9e2hpbnR9XG4gICAgICAgICAgICAgICAgICBzdWJtaXQ9e3N1Ym1pdH1cbiAgICAgICAgICAgICAgICAvLyBzdWJtaXQyPXt0aGlzLnN1Ym1pdDJ9XG4gICAgICAgICAgICAgICAgLz5cbiAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICA8c3R5bGUganN4PntgXG4gICAgICAgICAgICBkaXYge1xuICAgICAgICAgICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gICAgICAgICAgICAgIG1hcmdpbjogNXB4O1xuICAgICAgICAgICAgICBtYXJnaW4tYm90dG9tOjEwMHB4O1xuICAgICAgICAgICAgfVxuICAgICAgICAgIGB9PC9zdHlsZT5cbiAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cIlJ1bGViXCI+XG4gICAgICAgICAgPFJ1bGVzPlJ1bGVzPC9SdWxlcz5cbiAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgey8qIDxkaXYgY2xhc3NOYW1lPSdmb290ZXJCdWZmJz5cblxuICAgICAgICAgICAgICA8L2Rpdj4gKi99XG4gICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgIDxkaXYgc3R5bGU9e3tkaXNwbGF5OlwiaW5saW5lLWZsZXhcIiwganVzdGlmeUNvbnRlbnQ6XCJub3JtYWxcIixwb3NpdGlvbjpcInJlbGF0aXZlXCJ9fT5cbiAgICAgICAgICAgIHsvKiB7TG9nICYmIChcbiAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cInVzZXJEZXRhaWxzLXdyYXBwZXJcIj5cbiAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiZGV0YWlscy13cmFwcGVyXCI+XG4gICAgICAgICAgICAgIDxHb29nbGVMb2dvdXRcbiAgICAgICAgICAgICAgICByZW5kZXI9eyhyZW5kZXJQcm9wcykgPT4gKFxuICAgICAgICAgICAgICAgICAgPGRpdj5cbiAgICAgICAgICAgICAgICAgICAgPExpbmsgaHJlZj1cIi9cIj5cbiAgICAgICAgICAgICAgICAgICAgICA8TWVudUl0ZW0gb25DbGljaz17bG9nb3V0fT48VHlwb2dyYXBoeSBzdHlsZT17eyBjb2xvcjogJyNGRkZGRkYnLCBmb250RmFtaWx5OlwiJ1J1c3NvIE9uZScsIHNhbnMtc2VyaWZcIiwgZm9udFNpemU6MTggfX0+TG9nb3V0PC9UeXBvZ3JhcGh5PjwvTWVudUl0ZW0+XG4gICAgICAgICAgICAgICAgICAgIDwvTGluaz5cbiAgICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgICl9XG4gICAgICAgICAgICAgICAgb25Mb2dvdXRTdWNjZXNzPXtsb2dvdXR9XG4gICAgICAgICAgICAgIC8+XG4gICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgIFxuICAgICAgICAgIFxuICAgICAgICAgIDwvZGl2PlxuICAgICAgICApIH0gKi99XG4gICAgICAgIHsvKiA8UnVsZXM+UnVsZXM8L1J1bGVzPiAqL31cbiAgICAgICAgPC9kaXY+XG4gICAgICAgIFxuICAgICAgICAgIDwvTGF5b3V0PlxuICAgICAgICAgIDogPExvYWRlciAvPlxuICAgICAgICAgIH1cbiAgICAgICAgICBcbiAgICAgIDwvPlxuICAgIClcbiAgICAgICAgICBcbiAgICAgICAgICB9Il19 */\\n/*@ sourceURL=/home/ruchika/Desktop/Testing4/Screencast/components/Main.js */\"), __jsx(\"div\", {\n    className: \"jsx-4141458270\" + \" \" + \"Ruleb\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 477,\n      columnNumber: 11\n    }\n  }, __jsx(_Rules__WEBPACK_IMPORTED_MODULE_14__[\"default\"], {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 478,\n      columnNumber: 11\n    }\n  }, \"Rules\")))), __jsx(\"div\", {\n    style: {\n      display: \"inline-flex\",\n      justifyContent: \"normal\",\n      position: \"relative\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 485,\n      columnNumber: 13\n    }\n  })) : __jsx(_components_Loader__WEBPACK_IMPORTED_MODULE_9__[\"default\"], {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 508,\n      columnNumber: 13\n    }\n  }));\n}\n\n_s(game, \"3zLDmlPCtOPkkA8DEt5Z5Wco70U=\");\n\n;\n    var _a, _b;\n    // Legacy CSS implementations will `eval` browser code in a Node.js context\n    // to extract CSS. For backwards compatibility, we need to check we're in a\n    // browser context before continuing.\n    if (typeof self !== 'undefined' &&\n        // AMP / No-JS mode does not inject these helpers:\n        '$RefreshHelpers$' in self) {\n        var currentExports = module.__proto__.exports;\n        var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n        // This cannot happen in MainTemplate because the exports mismatch between\n        // templating and execution.\n        self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.i);\n        // A module can be accepted automatically based on its exports, e.g. when\n        // it is a Refresh Boundary.\n        if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n            // Save the previous exports on update so we can compare the boundary\n            // signatures.\n            module.hot.dispose(function (data) {\n                data.prevExports = currentExports;\n            });\n            // Unconditionally accept an update to this module, we'll check if it's\n            // still a Refresh Boundary later.\n            module.hot.accept();\n            // This field is set when the previous version of this module was a\n            // Refresh Boundary, letting us know we need to check for invalidation or\n            // enqueue an update.\n            if (prevExports !== null) {\n                // A boundary can become ineligible if its exports are incompatible\n                // with the previous exports.\n                //\n                // For example, if you add/remove/change exports, we'll want to\n                // re-execute the importing modules, and force those components to\n                // re-render. Similarly, if you convert a class component to a\n                // function, we want to invalidate the boundary.\n                if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                    module.hot.invalidate();\n                }\n                else {\n                    self.$RefreshHelpers$.scheduleUpdate();\n                }\n            }\n        }\n        else {\n            // Since we just executed the code for the module, it's possible that the\n            // new exports made it ineligible for being a boundary.\n            // We only care about the case when we were _previously_ a boundary,\n            // because we already accepted this update (accidental side effect).\n            var isNoLongerABoundary = prevExports !== null;\n            if (isNoLongerABoundary) {\n                module.hot.invalidate();\n            }\n        }\n    }\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../node_modules/webpack/buildin/harmony-module.js */ \"./node_modules/webpack/buildin/harmony-module.js\")(module)))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./components/Main.js\n");

/***/ }),

/***/ "./node_modules/@fortawesome/fontawesome-svg-core/index.es.js":
false,

/***/ "./node_modules/@fortawesome/free-brands-svg-icons/index.es.js":
false,

/***/ "./node_modules/@fortawesome/react-fontawesome/index.es.js":
false,

/***/ "./node_modules/css-loader/dist/cjs.js?!./node_modules/next/dist/compiled/postcss-loader/index.js?!./styles/Footers.module.css":
false,

/***/ "./styles/Footers.module.css":
false

})