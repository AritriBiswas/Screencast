{"ast":null,"code":"var _jsxFileName = \"/home/ruchika/Desktop/Testing4/Screencast/components/Timer2.js\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport Router from \"next/router\";\nimport Countdown, { zeroPad } from 'react-countdown';\nimport styles from \"../styles/Timer2.module.css\";\nexport default function Timer(props) {\n  var _this = this;\n\n  console.log(props); // const complete=()=>\n  // {\n  //     if(localStorage.getItem('email') )\n  //     {\n  //         console.log(\"DONEEEEEE\");\n  //         Router.push('/');\n  //     } \n  // }\n  // const Completionist = () => {\n  //     return (\n  //         <span className={styles.timer}>\n  //         <div style={{ backgroundColor: \"rgba(0,0,0,0)\", padding: \"0\", margin: \"0 auto\" }}>\n  //                 <div style={{ textAlign: \"center\", fontSize: \"17px\",  }}>\n  //                     <h1>\n  //                         Game is live !\n  //                     </h1>\n  //                 </div>\n  //         </div>\n  //     </span>\n  //     )\n  // }\n\n  var renderer = function renderer(_ref) {\n    var days = _ref.days,\n        hours = _ref.hours,\n        minutes = _ref.minutes,\n        seconds = _ref.seconds,\n        completed = _ref.completed;\n\n    if (completed) {// return <Completionist />;\n    } else {\n      return __jsx(\"div\", {\n        style: {\n          backgroundColor: \"rgba(0,0,0,0)\",\n          padding: \"0\",\n          margin: \"0 auto\"\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 21\n        }\n      }, __jsx(\"div\", {\n        style: {\n          textAlign: \"center\",\n          fontSize: \"17px\"\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 29\n        }\n      }, __jsx(\"h1\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 33\n        }\n      }, props.message, \"\\xA0\\xA0\", zeroPad(days, 2), \":\", zeroPad(hours), \":\", zeroPad(minutes), \":\", zeroPad(seconds)), __jsx(\"h1\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 33\n        }\n      }, \"Game is not live yet !\")));\n    }\n  };\n\n  return __jsx(Countdown, {\n    date: props.start,\n    renderer: renderer // onComplete={complete}\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }\n  });\n}\n_c = Timer;\n\nvar _c;\n\n$RefreshReg$(_c, \"Timer\");","map":{"version":3,"sources":["/home/ruchika/Desktop/Testing4/Screencast/components/Timer2.js"],"names":["React","Router","Countdown","zeroPad","styles","Timer","props","console","log","renderer","days","hours","minutes","seconds","completed","backgroundColor","padding","margin","textAlign","fontSize","message","start"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,aAAnB;AACA,OAAOC,SAAP,IAAoBC,OAApB,QAAmC,iBAAnC;AACA,OAAOC,MAAP,MAAmB,6BAAnB;AAEA,eAAe,SAASC,KAAT,CAAeC,KAAf,EAAsB;AAAA;;AACjCC,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ,EADiC,CAEjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;;AAEA,MAAMG,QAAQ,GAAG,SAAXA,QAAW,OAAkD;AAAA,QAA/CC,IAA+C,QAA/CA,IAA+C;AAAA,QAAzCC,KAAyC,QAAzCA,KAAyC;AAAA,QAAlCC,OAAkC,QAAlCA,OAAkC;AAAA,QAAzBC,OAAyB,QAAzBA,OAAyB;AAAA,QAAhBC,SAAgB,QAAhBA,SAAgB;;AAC/D,QAAIA,SAAJ,EAAe,CACX;AACH,KAFD,MAEO;AACH,aAEQ;AAAK,QAAA,KAAK,EAAE;AAAEC,UAAAA,eAAe,EAAE,eAAnB;AAAoCC,UAAAA,OAAO,EAAE,GAA7C;AAAkDC,UAAAA,MAAM,EAAE;AAA1D,SAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEQ;AAAK,QAAA,KAAK,EAAE;AAAEC,UAAAA,SAAS,EAAE,QAAb;AAAuBC,UAAAA,QAAQ,EAAE;AAAjC,SAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACKb,KAAK,CAACc,OADX,cACgCjB,OAAO,CAACO,IAAD,EAAO,CAAP,CADvC,OACmDP,OAAO,CAACQ,KAAD,CAD1D,OACoER,OAAO,CAACS,OAAD,CAD3E,OACuFT,OAAO,CAACU,OAAD,CAD9F,CADJ,EAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCAJJ,CAFR,CAFR;AAgBH;AACJ,GArBD;;AAuBA,SAEI,MAAC,SAAD;AACA,IAAA,IAAI,EAAEP,KAAK,CAACe,KADZ;AAGI,IAAA,QAAQ,EAAEZ,QAHd,CAII;AAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ;AAUH;KA9DuBJ,K","sourcesContent":["import React from 'react'\nimport Router from \"next/router\";\nimport Countdown, { zeroPad } from 'react-countdown';\nimport styles from \"../styles/Timer2.module.css\"\n\nexport default function Timer(props) {\n    console.log(props)\n    // const complete=()=>\n    // {\n    //     if(localStorage.getItem('email') )\n    //     {\n    //         console.log(\"DONEEEEEE\");\n    //         Router.push('/');\n    //     } \n    // }\n    // const Completionist = () => {\n    //     return (\n    //         <span className={styles.timer}>\n    //         <div style={{ backgroundColor: \"rgba(0,0,0,0)\", padding: \"0\", margin: \"0 auto\" }}>\n                \n               \n    //                 <div style={{ textAlign: \"center\", fontSize: \"17px\",  }}>\n                       \n    //                     <h1>\n    //                         Game is live !\n    //                     </h1>\n    //                 </div>\n               \n    //         </div>\n    //     </span>\n    //     )\n        \n    // }\n    \n    const renderer = ({ days, hours, minutes, seconds, completed }) => {\n        if (completed) {\n            // return <Completionist />;\n        } else {\n            return (\n                \n                    <div style={{ backgroundColor: \"rgba(0,0,0,0)\", padding: \"0\", margin: \"0 auto\" }}>\n                        \n                            <div style={{ textAlign: \"center\", fontSize: \"17px\", }}>\n                                <h1>\n                                    {props.message}&nbsp;&nbsp;{zeroPad(days, 2)}:{zeroPad(hours)}:{zeroPad(minutes)}:{zeroPad(seconds)}\n                                </h1>\n                                <h1>\n                                    Game is not live yet !\n                                </h1>\n                            </div>\n                       \n                    </div>\n                )\n\n        }\n    };\n\n    return (\n        \n        <Countdown\n        date={props.start}\n           \n            renderer={renderer}\n            // onComplete={complete}\n        />\n    )\n\n}"]},"metadata":{},"sourceType":"module"}