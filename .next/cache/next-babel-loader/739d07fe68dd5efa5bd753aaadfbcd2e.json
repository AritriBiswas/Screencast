{"ast":null,"code":"// import React , {useState,useEffect}from 'react'\n// import LeadTable from '../components/LeadTable';\n// import Main from '../components/Main';\n// import Login from '../components/Login';\n// import Timeline from '../components/Timeline';\n// import styles from '../styles/dashboard.module.css';\n// import Router from \"next/router\";\n// import axios from \"axios\";\n// function dashboard() {\n//     const [userlevel, setUserlevel]= useState(\"\");\n//     const [level,setLevel]= useState(\"\");\n//     const [loaded,setloaded]= useState(false);\n//     const [isLoggedin,setIsLoggedin]=useState(false);\n//     const checkLogin = ()=>{\n//       if(localStorage.getItem('token') === null ){\n//         setIsLoggedin(false)\n//         console.log(\"1\");\n//       }else{\n//           setIsLoggedin(true)\n//           console.log(\"2\");\n//           console.log(\"dashboard\");\n//         axios\n//         .get(process.env.api + \"/api/status\")\n//         .then((response)=>{\n//          setLevel(response.data.round_questions)\n//         })\n//         axios\n//         .get(process.env.api + \"/api/timeline\",{\n//          headers: {\n//            Authorization: \"Bearer \" + localStorage.getItem(\"token\"),\n//          },\n//         })\n//         .then((response)=>{\n//           setUserlevel(response.data.current_question)\n//         })\n//         .then(() => {\n//          setloaded(true);\n//        });\n//         }\n//       }\n//     const handleLevel = ()=>{\n//         axios\n//         .get(process.env.api + \"/api/status\")\n//         .then((response)=>{\n//          setLevel(response.data.round_questions)\n//         })\n//         axios\n//         .get(process.env.api + \"/api/timeline\",{\n//          headers: {\n//            Authorization: \"Bearer \" + localStorage.getItem(\"token\"),\n//          },\n//         })\n//         .then((response)=>{\n//           setUserlevel(response.data.current_question)\n//         })\n//     }\n//     useEffect(()=>{\n//       checkLogin();\n//       // console.log(\"dashboard\");\n//       //   axios\n//       //   .get(process.env.api + \"/api/status\")\n//       //   .then((response)=>{\n//       //    setLevel(response.data.round_questions)\n//       //   })\n//       //   axios\n//       //   .get(process.env.api + \"/api/timeline\",{\n//       //    headers: {\n//       //      Authorization: \"Bearer \" + localStorage.getItem(\"token\"),\n//       //    },\n//       //   })\n//       //   .then((response)=>{\n//       //     setUserlevel(response.data.current_question)\n//       //   })\n//       //   .then(() => {\n//       //    setloaded(true);\n//       //  });\n//        },[]);\n//    return (\n//         <div className={styles.Container}>\n//             <div className={styles.cont}>\n//             <div className={styles.TimelineContainer}>\n//              {isLoggedin? (<Timeline level={level} userlevel={userlevel} loaded={loaded}/>):(<>\n//               <div className=\"head\">\n//           <div className=\"container neon-box\" style={{\n//             textAlign: \"center\",\n//             fontSize: \"25px\",\n//             fontFamily: \"'Russo One', sans-serif\",\n//             // color:\"white\"\n//           }}>\n//             <span className=\"flicker\">TIMELINE</span>\n//             </div>\n//         </div>\n//              <div className={styles.show}>\n//                <div className=\"flicker\" style={{fontSize:\"30px\", alignItems:\"center\", display:\"inline-flex\", position:\"absolute\",height:\"40vh\"}}>\n//              PLEASE LOGIN FIRST!\n//              </div>\n//              </div></>)}\n//              </div>\n//             <div className={styles.MainContainer}>\n//               {isLoggedin? (<Main level={level} userlevel={userlevel} loaded={loaded} handleLevel={handleLevel} isLoggedin={isLoggedin}/>):(\n//                <>\n//                <div className=\"head\">\n//                <div className=\"container neon-box\"\n//              style={{\n//                textAlign: \"center\",\n//                fontSize: \"29px\",\n//                fontFamily: \"'Russo One', sans-serif\",\n//              }}>\n//              <span className=\"flicker\">SCREENCAST</span>\n//            </div>\n//          </div>\n//               <div className={styles.logC}>\n//                <Login isLoggedin={isLoggedin}/>\n//               </div>\n//               </>\n//               )}\n//                 </div>\n//             <div className={styles.LeadtableContainer}><LeadTable/></div>\n//             </div>\n//             </div>\n//     )\n// }\n// export default dashboard","map":{"version":3,"sources":["/home/ruchika/Desktop/Testing4/Screencast/pages/dashboard.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AAEA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA","sourcesContent":["// import React , {useState,useEffect}from 'react'\n// import LeadTable from '../components/LeadTable';\n// import Main from '../components/Main';\n// import Login from '../components/Login';\n// import Timeline from '../components/Timeline';\n// import styles from '../styles/dashboard.module.css';\n// import Router from \"next/router\";\n// import axios from \"axios\";\n\n\n\n// function dashboard() {\n//     const [userlevel, setUserlevel]= useState(\"\");\n//     const [level,setLevel]= useState(\"\");\n//     const [loaded,setloaded]= useState(false);\n//     const [isLoggedin,setIsLoggedin]=useState(false);\n\n//     const checkLogin = ()=>{\n//       if(localStorage.getItem('token') === null ){\n//         setIsLoggedin(false)\n//         console.log(\"1\");\n        \n//       }else{\n//           setIsLoggedin(true)\n//           console.log(\"2\");\n//           console.log(\"dashboard\");\n//         axios\n//         .get(process.env.api + \"/api/status\")\n//         .then((response)=>{\n//          setLevel(response.data.round_questions)\n//         })\n//         axios\n//         .get(process.env.api + \"/api/timeline\",{\n//          headers: {\n//            Authorization: \"Bearer \" + localStorage.getItem(\"token\"),\n//          },\n//         })\n//         .then((response)=>{\n//           setUserlevel(response.data.current_question)\n//         })\n//         .then(() => {\n//          setloaded(true);\n//        });\n//         }\n//       }\n\n    \n    \n//     const handleLevel = ()=>{\n//         axios\n//         .get(process.env.api + \"/api/status\")\n//         .then((response)=>{\n         \n//          setLevel(response.data.round_questions)\n     \n         \n//         })\n//         axios\n//         .get(process.env.api + \"/api/timeline\",{\n//          headers: {\n//            Authorization: \"Bearer \" + localStorage.getItem(\"token\"),\n//          },\n//         })\n//         .then((response)=>{\n//           setUserlevel(response.data.current_question)\n//         })\n        \n//     }\n//     useEffect(()=>{\n\n//       checkLogin();\n\n      \n//       // console.log(\"dashboard\");\n//       //   axios\n//       //   .get(process.env.api + \"/api/status\")\n//       //   .then((response)=>{\n//       //    setLevel(response.data.round_questions)\n//       //   })\n//       //   axios\n//       //   .get(process.env.api + \"/api/timeline\",{\n//       //    headers: {\n//       //      Authorization: \"Bearer \" + localStorage.getItem(\"token\"),\n//       //    },\n//       //   })\n//       //   .then((response)=>{\n//       //     setUserlevel(response.data.current_question)\n//       //   })\n//       //   .then(() => {\n//       //    setloaded(true);\n//       //  });\n       \n//        },[]);\n//    return (\n        \n//         <div className={styles.Container}>\n//             <div className={styles.cont}>\n//             <div className={styles.TimelineContainer}>\n//              {isLoggedin? (<Timeline level={level} userlevel={userlevel} loaded={loaded}/>):(<>\n//               <div className=\"head\">\n//           <div className=\"container neon-box\" style={{\n//             textAlign: \"center\",\n//             fontSize: \"25px\",\n//             fontFamily: \"'Russo One', sans-serif\",\n//             // color:\"white\"\n//           }}>\n//             <span className=\"flicker\">TIMELINE</span>\n//             </div>\n//         </div>\n//              <div className={styles.show}>\n//                <div className=\"flicker\" style={{fontSize:\"30px\", alignItems:\"center\", display:\"inline-flex\", position:\"absolute\",height:\"40vh\"}}>\n//              PLEASE LOGIN FIRST!\n//              </div>\n//              </div></>)}\n//              </div>\n//             <div className={styles.MainContainer}>\n//               {isLoggedin? (<Main level={level} userlevel={userlevel} loaded={loaded} handleLevel={handleLevel} isLoggedin={isLoggedin}/>):(\n//                <>\n//                <div className=\"head\">\n//                <div className=\"container neon-box\"\n//              style={{\n//                textAlign: \"center\",\n//                fontSize: \"29px\",\n//                fontFamily: \"'Russo One', sans-serif\",\n//              }}>\n//              <span className=\"flicker\">SCREENCAST</span>\n//            </div>\n//          </div>\n//               <div className={styles.logC}>\n//                <Login isLoggedin={isLoggedin}/>\n//               </div>\n//               </>\n//               )}\n//                 </div>\n//             <div className={styles.LeadtableContainer}><LeadTable/></div>\n//             </div>\n//             </div>\n        \n//     )\n// }\n\n// export default dashboard\n"]},"metadata":{},"sourceType":"script"}