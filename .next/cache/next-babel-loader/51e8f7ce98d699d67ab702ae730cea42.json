{"ast":null,"code":"var _jsxFileName = \"/home/ruchika/Desktop/Testing4/Screencast/components/Timer2.js\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport Router from \"next/router\";\nimport Countdown, { zeroPad } from 'react-countdown';\nimport styles from \"../styles/Timer2.module.css\";\nimport DrawerLeft from './DrawerLeft';\nimport DrawerRight from './DrawerRight';\nexport default function Timer(props) {\n  console.log(props);\n\n  const complete = () => {\n    if (localStorage.getItem('email')) {\n      console.log(\"DONEEEEEE\");\n      Router.push('/');\n    }\n  };\n\n  const Completionist = () => {\n    return __jsx(\"span\", {\n      className: styles.timer,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 13\n      }\n    }, __jsx(\"div\", {\n      style: {\n        backgroundColor: \"rgba(0,0,0,0)\",\n        padding: \"0\",\n        margin: \"0 auto\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 13\n      }\n    }, __jsx(\"div\", {\n      style: {\n        textAlign: \"center\",\n        fontSize: \"17px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 21\n      }\n    }, __jsx(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 25\n      }\n    }, \"Game is live !\"))));\n  };\n\n  const renderer = ({\n    days,\n    hours,\n    minutes,\n    seconds,\n    completed\n  }) => {\n    if (completed) {\n      return __jsx(Completionist, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 20\n        }\n      });\n    } else {\n      return __jsx(React.Fragment, null, __jsx(\"div\", {\n        className: \"head\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 17\n        }\n      }, __jsx(\"div\", {\n        className: \"container neon-box\",\n        style: {\n          textAlign: \"center\",\n          fontSize: \"29px\",\n          fontFamily: \"'Russo One', sans-serif\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 17\n        }\n      }, __jsx(\"span\", {\n        className: \"flicker\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 19\n        }\n      }, \"SCREENCAST\"))), __jsx(\"div\", {\n        className: \"flicker\",\n        style: {\n          backgroundColor: \"rgba(0,0,0,0)\",\n          padding: \"0\",\n          margin: \"0 auto\",\n          fontFamily: \"'Lucida Sans', 'Lucida Sans Regular', 'Lucida Grande', 'Lucida Sans Unicode', Geneva, Verdana, sans-serif\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 21\n        }\n      }, __jsx(\"div\", {\n        className: styles.show3,\n        style: {\n          textAlign: \"center\",\n          fontSize: \"17px\",\n          justifyContent: \"center\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 29\n        }\n      }, __jsx(\"h1\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 33\n        }\n      }, props.message, \"\\xA0\\xA0\", __jsx(\"div\", {\n        className: styles.tile,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 37\n        }\n      }, __jsx(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 37\n        }\n      }, zeroPad(days, 2)), \":\", __jsx(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 67\n        }\n      }, zeroPad(hours)), \":\", __jsx(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 95\n        }\n      }, zeroPad(minutes)), \":\", __jsx(React.Fragment, null, zeroPad(seconds)))), __jsx(\"h1\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 33\n        }\n      }, \"Game is not live yet !\"))));\n    }\n  };\n\n  return __jsx(Countdown, {\n    date: props.start,\n    renderer: renderer,\n    onComplete: complete,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }\n  });\n}","map":{"version":3,"sources":["/home/ruchika/Desktop/Testing4/Screencast/components/Timer2.js"],"names":["React","Router","Countdown","zeroPad","styles","DrawerLeft","DrawerRight","Timer","props","console","log","complete","localStorage","getItem","push","Completionist","timer","backgroundColor","padding","margin","textAlign","fontSize","renderer","days","hours","minutes","seconds","completed","fontFamily","show3","justifyContent","message","tile","start"],"mappings":"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","sourcesContent":["import React from 'react'\nimport Router from \"next/router\";\nimport Countdown, { zeroPad } from 'react-countdown';\nimport styles from \"../styles/Timer2.module.css\";\nimport DrawerLeft from './DrawerLeft';\nimport DrawerRight from './DrawerRight';\n\nexport default function Timer(props) {\n    console.log(props)\n    const complete=()=>\n    {\n        if(localStorage.getItem('email') )\n        {\n            console.log(\"DONEEEEEE\");\n            Router.push('/');\n        } \n    }\n    const Completionist = () => {\n        return (\n            <span className={styles.timer}>\n            <div style={{ backgroundColor: \"rgba(0,0,0,0)\", padding: \"0\", margin: \"0 auto\" }}>\n                \n               \n                    <div style={{ textAlign: \"center\", fontSize: \"17px\",  }}>\n                       \n                        <h1>\n                            Game is live !\n                        </h1>\n                    </div>\n               \n            </div>\n        </span>\n        )\n        \n    }\n    \n    const renderer = ({ days, hours, minutes, seconds, completed }) => {\n        if (completed) {\n            return <Completionist />;\n        } else {\n            return (\n                <>\n                {/* <div className=\"arrow\" style={{color:\"black 0%\",fontSize:\"20px\"}}>\n                    {/* <DrawerLeft level={props.level} userlevel={props.userlevel} loaded={props.loaded} isLoggedin={props.isLoggedin}/> */}\n                    {/* <DrawerRight/></div>  */}\n                <div className=\"head\">\n                <div\n                  className=\"container neon-box\"\n                  style={{\n                    textAlign: \"center\",\n                    fontSize: \"29px\",\n                    fontFamily: \"'Russo One', sans-serif\",\n                  }}\n                >\n                  <span className=\"flicker\">SCREENCAST</span>\n                </div>\n              </div>\n                    <div className=\"flicker\" style={{ backgroundColor:\"rgba(0,0,0,0)\",padding: \"0\", margin: \"0 auto\" , fontFamily:\"'Lucida Sans', 'Lucida Sans Regular', 'Lucida Grande', 'Lucida Sans Unicode', Geneva, Verdana, sans-serif\"\n                                    }}>\n                        \n                            <div className={styles.show3}style={{ textAlign: \"center\", fontSize: \"17px\", justifyContent:\"center\"}}>\n                                <h1>\n                                    {props.message}&nbsp;&nbsp;\n                                    <div className={styles.tile} >\n                                    <div>{zeroPad(days, 2)}</div>:<div>{zeroPad(hours)}</div>:<div>{zeroPad(minutes)}</div>:<>{zeroPad(seconds)}</>\n                                    </div>\n                                </h1>\n                                <h1>\n                                    Game is not live yet !\n                                </h1>\n                            </div>\n                       \n                    </div>\n                    </>\n                )\n            }\n        \n    };\n\n    return (\n        \n        <Countdown\n        date={props.start}\n           \n            renderer={renderer}\n            onComplete={complete}\n        />\n    )\n\n}"]},"metadata":{},"sourceType":"module"}