{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"/home/ruchika/Desktop/Testing2/Screencast/components/DrawerLeft.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport { Button } from '@material-ui/core';\nimport { Drawer } from '@material-ui/core';\nimport Timeline from './Timeline';\n\nfunction DrawerLeft(props) {\n  _s();\n\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      state = _React$useState2[0],\n      setState = _React$useState2[1];\n\n  var _useState = useState(false),\n      isLoggedin = _useState[0],\n      setIsLoggedin = _useState[1];\n\n  var toggleDrawer = function toggleDrawer(open) {\n    return function (event) {\n      setState(open);\n    };\n  };\n\n  return __jsx(React.Fragment, null, __jsx(Button, {\n    onClick: toggleDrawer(true),\n    className: \"flicker\",\n    style: {\n      color: \"#4dcfe0\",\n      fontSize: \"18px\",\n      fontWeight: \"bold\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 9\n    }\n  }, \"TIMELINE\"), __jsx(Drawer, {\n    anchor: 'left',\n    width: '100%',\n    open: state,\n    onClose: toggleDrawer(false),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    onClick: toggleDrawer(false),\n    style: {\n      backgroundColor: \"black\",\n      height: \"1000vh\",\n      width: \"50vh\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }\n  }, __jsx(Timeline, {\n    level: props.level,\n    userlevel: props.userlevel,\n    loaded: props.loaded,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }\n  }))));\n}\n\n_s(DrawerLeft, \"Qj7Mj2bJ6eIj0nAUjxL7VYlm6XM=\");\n\n_c = DrawerLeft;\nexport default DrawerLeft;\n\nvar _c;\n\n$RefreshReg$(_c, \"DrawerLeft\");","map":{"version":3,"sources":["/home/ruchika/Desktop/Testing2/Screencast/components/DrawerLeft.js"],"names":["React","useState","Button","Drawer","Timeline","DrawerLeft","props","state","setState","isLoggedin","setIsLoggedin","toggleDrawer","open","event","color","fontSize","fontWeight","backgroundColor","height","width","level","userlevel","loaded"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,SAASC,MAAT,QAAuB,mBAAvB;AACA,SAASC,MAAT,QAAuB,mBAAvB;AACA,OAAOC,QAAP,MAAqB,YAArB;;AAEA,SAASC,UAAT,CAAoBC,KAApB,EAA2B;AAAA;;AAAA,wBACCN,KAAK,CAACC,QAAN,CAAe,KAAf,CADD;AAAA;AAAA,MAChBM,KADgB;AAAA,MACVC,QADU;;AAAA,kBAEWP,QAAQ,CAAC,KAAD,CAFnB;AAAA,MAEhBQ,UAFgB;AAAA,MAELC,aAFK;;AAGvB,MAAMC,YAAY,GAAC,SAAbA,YAAa,CAACC,IAAD;AAAA,WAAU,UAACC,KAAD,EAAW;AACpCL,MAAAA,QAAQ,CAACI,IAAD,CAAR;AACH,KAFkB;AAAA,GAAnB;;AAGA,SACI,4BACA,MAAC,MAAD;AAAQ,IAAA,OAAO,EAAED,YAAY,CAAC,IAAD,CAA7B;AACA,IAAA,SAAS,EAAC,SADV;AAEA,IAAA,KAAK,EAAE;AAACG,MAAAA,KAAK,EAAC,SAAP;AAAkBC,MAAAA,QAAQ,EAAC,MAA3B;AAAmCC,MAAAA,UAAU,EAAC;AAA9C,KAFP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADA,EAIA,MAAC,MAAD;AACA,IAAA,MAAM,EAAE,MADR;AAEA,IAAA,KAAK,EAAE,MAFP;AAGA,IAAA,IAAI,EAAET,KAHN;AAIA,IAAA,OAAO,EAAEI,YAAY,CAAC,KAAD,CAJrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKI;AACA,IAAA,OAAO,EAAEA,YAAY,CAAC,KAAD,CADrB;AAEA,IAAA,KAAK,EAAE;AAACM,MAAAA,eAAe,EAAC,OAAjB;AAA0BC,MAAAA,MAAM,EAAC,QAAjC;AAA2CC,MAAAA,KAAK,EAAC;AAAjD,KAFP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGA,MAAC,QAAD;AAAU,IAAA,KAAK,EAAEb,KAAK,CAACc,KAAvB;AAA8B,IAAA,SAAS,EAAEd,KAAK,CAACe,SAA/C;AAA0D,IAAA,MAAM,EAAEf,KAAK,CAACgB,MAAxE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHA,CALJ,CAJA,CADJ;AAmBH;;GAzBQjB,U;;KAAAA,U;AA2BT,eAAeA,UAAf","sourcesContent":["import React, {useState} from 'react'\nimport { Button } from '@material-ui/core';\nimport { Drawer } from '@material-ui/core';\nimport Timeline from './Timeline';\n\nfunction DrawerLeft(props) {\n    const [state,setState]= React.useState(false);\n    const [isLoggedin,setIsLoggedin]= useState(false);\n    const toggleDrawer=(open) => (event) => {\n        setState(open)\n    }\n    return (\n        <>\n        <Button onClick={toggleDrawer(true)}\n        className=\"flicker\"\n        style={{color:\"#4dcfe0\", fontSize:\"18px\", fontWeight:\"bold\"}}>TIMELINE</Button>\n        <Drawer\n        anchor={'left'}\n        width={'100%'}\n        open={state}\n        onClose={toggleDrawer(false)}>\n            <div \n            onClick={toggleDrawer(false)}\n            style={{backgroundColor:\"black\", height:\"1000vh\", width:\"50vh\"}}>\n            <Timeline level={props.level} userlevel={props.userlevel} loaded={props.loaded}/>\n            </div>\n            </Drawer>\n            \n        </>\n    )\n}\n\nexport default DrawerLeft"]},"metadata":{},"sourceType":"module"}