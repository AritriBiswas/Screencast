{"ast":null,"code":"var _jsxFileName = \"/home/ruchika/Desktop/Testing4/Screencast/components/GoogleLog.js\";\nvar __jsx = React.createElement;\n// import React, {useState,useEffect} from \"react\";\n// import GoogleLogin from \"react-google-login\";\n// import axios from \"axios\";\n// import Button from \"@material-ui/core/Button\";\n// import { withStyles } from \"@material-ui/core/styles\";\n// import { SocialMediaIconsReact } from 'social-media-icons-react';\n// import Router from \"next/router\";\n// import AnsAlert from \"../components/AnsAlert\"\n// // import data from '../env.json';\n// const useStyles = (theme) => ({\n//   root: {\n//     \"& > *\": {\n//       margin: theme.spacing(0),\n//     },\n//   },\n// });\n//  function GoogleLog(props) {\n//        const [userDetails,setUserDetails]= useState({}),\n//        [isUserLoggedIn,setIsUserLoggedIn]=useState(false),\n//        [access,setAccess]=useState(\"\"),\n//        [result,setResult]=useState(false)\n//       //  const classes = useStyles();\n//       useEffect (() => {\n//     if (localStorage.getItem('day') == 3 && localStorage.getItem('end') < Date.now()) Router.push('/finale')\n//     else {\n//       if (localStorage.getItem(\"email\")) {\n//         setIsUserLoggedIn({isUserLoggedIn:true} , () => {\n//         })\n//       }\n//     }\n//   },[]);\n//   const responseGoogle = (response) => {\n//     console.log(response);\n//     axios\n//       .post(process.env.api + \"/api/googlelogin\", {\n//         token: response.tokenObj.id_token\n//       })\n//       .then((res) => {\n//         localStorage.setItem('token', res.data.access_token)\n//         //localStorage.setItem('ref_token', res.data.refresh_token)\n//         localStorage.setItem(\"email\", response.profileObj.email);\n//         localStorage.setItem(\"name\", response.profileObj.name);\n//         localStorage.setItem(\"image\", response.profileObj.imageUrl);\n//          setResult(res.data.quiz_finished)\n//            setAccess(res.data.access_token) \n//            setUserDetails(response.profileObj) \n//            setIsUserLoggedIn(true) \n//            if ((localStorage.getItem('start') <= Date.now())) {\n//             if (!(res.data.quiz_finished) && localStorage.getItem('end') > Date.now()){\n//               console.log(\"game\");\n//               Router.push('/dashboard')\n//             }\n//             else if (res.data.quiz_finished && localStorage.getItem('end') > Date.now()) {\n//                 console.log(\"finale\");\n//               Router.push('/finale')\n//             }\n//             else if((res.data.error) === \"No active quizes\"){\n//               Router.push('/finale')\n//             }\n//             else { \n//               Router.push('/error')\n//             }\n//           }\n//           else\n//             Router.reload();\n//       })\n//       .catch((err) => {\n//         console.log(err)\n//       });\n//   };\n//     const { classes } = props;\n//     return (\n//       <div>\n//         <div>\n//           {!isUserLoggedIn && (\n//             <GoogleLogin\n//               clientId=\"868193229049-r3rkp0lue3f4hk4g0d0c4h418d63mbmb.apps.googleusercontent.com\"\n//               render={(renderProps) => (\n//                 <div className={classes.root}  >\n//                   <Button\n//                     style={{ backgroundColor: \"rgba(0,0,0,0)\", padding: \"0\" }}\n//                     variant=\"contained\"\n//                     color=\"secondary\"\n//                     className=\"button\"\n//                     disableElevation={true}\n//                     onClick={renderProps.onClick}\n//                   >\n//                     <SocialMediaIconsReact borderColor=\"rgba(0,0,0,0.25)\" borderWidth=\"4\" borderStyle=\"inset\" icon=\"googleplus\" iconColor=\"rgba(0,0,0,1)\" backgroundColor=\"rgba(21, 234, 248, 1)\" iconSize=\"7\" roundness=\"50%\" size=\"53\" />\n//                   </Button>\n//                 </div>\n//               )}\n//               onSuccess={responseGoogle} //isSignedIn ??\n//               onFailure={responseGoogle} //handle later\n//               cookiePolicy={\"single_host_origin\"}\n//             />\n//           )}\n//         </div>\n//       </div>\n//     );\n// }\n// export default withStyles(useStyles)(GoogleLog);\nimport React, { useState, useEffect } from \"react\";\nimport GoogleLogin from \"react-google-login\";\nimport axios from \"axios\";\nimport Button from \"@material-ui/core/Button\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport { SocialMediaIconsReact } from 'social-media-icons-react';\nimport Router from \"next/router\";\nimport AnsAlert from \"../components/AnsAlert\"; // import data from '../env.json';\n\nconst useStyles = theme => ({\n  root: {\n    \"& > *\": {\n      margin: theme.spacing(0)\n    }\n  }\n});\n\nfunction GoogleLog(props) {\n  const {\n    0: userDetails,\n    1: setUserDetails\n  } = useState({}),\n        {\n    0: isUserLoggedIn,\n    1: setIsUserLoggedIn\n  } = useState(false),\n        {\n    0: access,\n    1: setAccess\n  } = useState(\"\"),\n        {\n    0: result,\n    1: setResult\n  } = useState(false); //  const classes = useStyles();\n\n  useEffect(() => {\n    if (localStorage.getItem('day') == 3 && localStorage.getItem('end') < Date.now()) Router.push('/finale');else {\n      if (localStorage.getItem(\"email\")) {\n        setIsUserLoggedIn({\n          isUserLoggedIn: true\n        }, () => {});\n      }\n    }\n  }, []);\n\n  const responseGoogle = response => {\n    console.log(response);\n    axios.post(process.env.api + \"/api/googlelogin\", {\n      token: response.tokenObj.id_token\n    }).then(res => {\n      localStorage.setItem('token', res.data.access_token); //localStorage.setItem('ref_token', res.data.refresh_token)\n\n      localStorage.setItem(\"email\", response.profileObj.email);\n      localStorage.setItem(\"name\", response.profileObj.name);\n      localStorage.setItem(\"image\", response.profileObj.imageUrl);\n      setResult(res.data.quiz_finished);\n      setAccess(res.data.access_token);\n      setUserDetails(response.profileObj);\n      setIsUserLoggedIn(true);\n\n      if (localStorage.getItem('start') <= Date.now()) {\n        if (!res.data.quiz_finished && localStorage.getItem('end') > Date.now()) {\n          console.log(\"game\");\n          Router.push('/dashboard');\n        } else if (res.data.quiz_finished && localStorage.getItem('end') > Date.now()) {\n          console.log(\"finale\");\n          Router.push('/dashboard');\n        } // else if((res.data.error) === \"No active quizes\"){\n        //   // Router.push('/dashboard')\n        // }\n        else if (res.status !== 200) {\n            Router.push('/error');\n          }\n      } else Router.reload();\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n\n  const {\n    classes\n  } = props;\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 9\n    }\n  }, !isUserLoggedIn && __jsx(GoogleLogin, {\n    clientId: \"868193229049-r3rkp0lue3f4hk4g0d0c4h418d63mbmb.apps.googleusercontent.com\",\n    render: renderProps => __jsx(\"div\", {\n      className: classes.root,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 17\n      }\n    }, __jsx(Button, {\n      style: {\n        backgroundColor: \"rgba(0,0,0,0)\",\n        padding: \"0\"\n      },\n      variant: \"contained\",\n      color: \"secondary\",\n      className: \"button\",\n      disableElevation: true,\n      onClick: renderProps.onClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 19\n      }\n    }, __jsx(SocialMediaIconsReact, {\n      borderColor: \"rgba(0,0,0,0.25)\",\n      borderWidth: \"4\",\n      borderStyle: \"inset\",\n      icon: \"googleplus\",\n      iconColor: \"rgba(0,0,0,1)\",\n      backgroundColor: \"rgba(21, 234, 248, 1)\",\n      iconSize: \"7\",\n      roundness: \"50%\",\n      size: \"53\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 21\n      }\n    }))),\n    onSuccess: responseGoogle //isSignedIn ??\n    ,\n    onFailure: responseGoogle //handle later\n    ,\n    cookiePolicy: \"single_host_origin\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 13\n    }\n  })));\n}\n\nexport default withStyles(useStyles)(GoogleLog);","map":{"version":3,"sources":["/home/ruchika/Desktop/Testing4/Screencast/components/GoogleLog.js"],"names":["React","useState","useEffect","GoogleLogin","axios","Button","withStyles","SocialMediaIconsReact","Router","AnsAlert","useStyles","theme","root","margin","spacing","GoogleLog","props","userDetails","setUserDetails","isUserLoggedIn","setIsUserLoggedIn","access","setAccess","result","setResult","localStorage","getItem","Date","now","push","responseGoogle","response","console","log","post","process","env","api","token","tokenObj","id_token","then","res","setItem","data","access_token","profileObj","email","name","imageUrl","quiz_finished","status","reload","catch","err","classes","renderProps","backgroundColor","padding","onClick"],"mappings":"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","sourcesContent":["\n\n// import React, {useState,useEffect} from \"react\";\n// import GoogleLogin from \"react-google-login\";\n// import axios from \"axios\";\n// import Button from \"@material-ui/core/Button\";\n// import { withStyles } from \"@material-ui/core/styles\";\n// import { SocialMediaIconsReact } from 'social-media-icons-react';\n// import Router from \"next/router\";\n// import AnsAlert from \"../components/AnsAlert\"\n// // import data from '../env.json';\n\n\n// const useStyles = (theme) => ({\n//   root: {\n//     \"& > *\": {\n//       margin: theme.spacing(0),\n//     },\n//   },\n// });\n\n//  function GoogleLog(props) {\n  \n//        const [userDetails,setUserDetails]= useState({}),\n//        [isUserLoggedIn,setIsUserLoggedIn]=useState(false),\n//        [access,setAccess]=useState(\"\"),\n//        [result,setResult]=useState(false)\n//       //  const classes = useStyles();\n\n    \n  \n\n//       useEffect (() => {\n//     if (localStorage.getItem('day') == 3 && localStorage.getItem('end') < Date.now()) Router.push('/finale')\n//     else {\n//       if (localStorage.getItem(\"email\")) {\n//         setIsUserLoggedIn({isUserLoggedIn:true} , () => {\n//         })\n//       }\n//     }\n//   },[]);\n\n//   const responseGoogle = (response) => {\n//     console.log(response);\n//     axios\n//       .post(process.env.api + \"/api/googlelogin\", {\n//         token: response.tokenObj.id_token\n//       })\n//       .then((res) => {\n//         localStorage.setItem('token', res.data.access_token)\n//         //localStorage.setItem('ref_token', res.data.refresh_token)\n//         localStorage.setItem(\"email\", response.profileObj.email);\n//         localStorage.setItem(\"name\", response.profileObj.name);\n//         localStorage.setItem(\"image\", response.profileObj.imageUrl);\n\n//          setResult(res.data.quiz_finished)\n//            setAccess(res.data.access_token) \n//            setUserDetails(response.profileObj) \n//            setIsUserLoggedIn(true) \n//            if ((localStorage.getItem('start') <= Date.now())) {\n//             if (!(res.data.quiz_finished) && localStorage.getItem('end') > Date.now()){\n//               console.log(\"game\");\n//               Router.push('/dashboard')\n//             }\n             \n//             else if (res.data.quiz_finished && localStorage.getItem('end') > Date.now()) {\n//                 console.log(\"finale\");\n//               Router.push('/finale')\n//             }\n//             else if((res.data.error) === \"No active quizes\"){\n//               Router.push('/finale')\n//             }\n//             else { \n//               Router.push('/error')\n//             }\n//           }\n//           else\n//             Router.reload();\n            \n          \n        \n//       })\n//       .catch((err) => {\n//         console.log(err)\n//       });\n//   };\n\n\n  \n//     const { classes } = props;\n//     return (\n//       <div>\n//         <div>\n//           {!isUserLoggedIn && (\n//             <GoogleLogin\n//               clientId=\"868193229049-r3rkp0lue3f4hk4g0d0c4h418d63mbmb.apps.googleusercontent.com\"\n//               render={(renderProps) => (\n//                 <div className={classes.root}  >\n\n//                   <Button\n//                     style={{ backgroundColor: \"rgba(0,0,0,0)\", padding: \"0\" }}\n//                     variant=\"contained\"\n//                     color=\"secondary\"\n//                     className=\"button\"\n//                     disableElevation={true}\n//                     onClick={renderProps.onClick}\n\n//                   >\n//                     <SocialMediaIconsReact borderColor=\"rgba(0,0,0,0.25)\" borderWidth=\"4\" borderStyle=\"inset\" icon=\"googleplus\" iconColor=\"rgba(0,0,0,1)\" backgroundColor=\"rgba(21, 234, 248, 1)\" iconSize=\"7\" roundness=\"50%\" size=\"53\" />\n//                   </Button>\n//                 </div>\n//               )}\n//               onSuccess={responseGoogle} //isSignedIn ??\n//               onFailure={responseGoogle} //handle later\n\n//               cookiePolicy={\"single_host_origin\"}\n//             />\n//           )}\n//         </div>\n//       </div>\n\n//     );\n  \n// }\n\n// export default withStyles(useStyles)(GoogleLog);\n\n\n\nimport React, {useState,useEffect} from \"react\";\nimport GoogleLogin from \"react-google-login\";\nimport axios from \"axios\";\nimport Button from \"@material-ui/core/Button\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport { SocialMediaIconsReact } from 'social-media-icons-react';\nimport Router from \"next/router\";\nimport AnsAlert from \"../components/AnsAlert\"\n// import data from '../env.json';\n\n\nconst useStyles = (theme) => ({\n  root: {\n    \"& > *\": {\n      margin: theme.spacing(0),\n    },\n  },\n});\n\n function GoogleLog(props) {\n  \n       const [userDetails,setUserDetails]= useState({}),\n       [isUserLoggedIn,setIsUserLoggedIn]=useState(false),\n       [access,setAccess]=useState(\"\"),\n       [result,setResult]=useState(false)\n      //  const classes = useStyles();\n\n    \n  \n\n      useEffect (() => {\n    if (localStorage.getItem('day') == 3 && localStorage.getItem('end') < Date.now()) Router.push('/finale')\n    else {\n      if (localStorage.getItem(\"email\")) {\n        setIsUserLoggedIn({isUserLoggedIn:true} , () => {\n        })\n      }\n    }\n  },[]);\n\n  const responseGoogle = (response) => {\n    console.log(response);\n    axios\n      .post(process.env.api + \"/api/googlelogin\", {\n        token: response.tokenObj.id_token\n      })\n      .then((res) => {\n        localStorage.setItem('token', res.data.access_token)\n        //localStorage.setItem('ref_token', res.data.refresh_token)\n        localStorage.setItem(\"email\", response.profileObj.email);\n        localStorage.setItem(\"name\", response.profileObj.name);\n        localStorage.setItem(\"image\", response.profileObj.imageUrl);\n\n         setResult(res.data.quiz_finished)\n           setAccess(res.data.access_token) \n           setUserDetails(response.profileObj) \n           setIsUserLoggedIn(true) \n           if ((localStorage.getItem('start') <= Date.now())) {\n            if (!(res.data.quiz_finished) && localStorage.getItem('end') > Date.now()){\n              console.log(\"game\");\n              Router.push('/dashboard')\n            }\n             \n            else if (res.data.quiz_finished && localStorage.getItem('end') > Date.now()) {\n                console.log(\"finale\");\n              Router.push('/dashboard')\n            }\n            // else if((res.data.error) === \"No active quizes\"){\n            //   // Router.push('/dashboard')\n            // }\n            \n            else if (res.status !== 200){ \n              Router.push('/error')\n            }\n          }\n          else\n            Router.reload();\n            \n          \n        \n      })\n      .catch((err) => {\n        console.log(err)\n      });\n  };\n\n\n  \n    const { classes } = props;\n    return (\n      <div>\n        <div>\n          {!isUserLoggedIn && (\n            <GoogleLogin\n              clientId=\"868193229049-r3rkp0lue3f4hk4g0d0c4h418d63mbmb.apps.googleusercontent.com\"\n              render={(renderProps) => (\n                <div className={classes.root}  >\n\n                  <Button\n                    style={{ backgroundColor: \"rgba(0,0,0,0)\", padding: \"0\" }}\n                    variant=\"contained\"\n                    color=\"secondary\"\n                    className=\"button\"\n                    disableElevation={true}\n                    onClick={renderProps.onClick}\n\n                  >\n                    <SocialMediaIconsReact borderColor=\"rgba(0,0,0,0.25)\" borderWidth=\"4\" borderStyle=\"inset\" icon=\"googleplus\" iconColor=\"rgba(0,0,0,1)\" backgroundColor=\"rgba(21, 234, 248, 1)\" iconSize=\"7\" roundness=\"50%\" size=\"53\" />\n                  </Button>\n                </div>\n              )}\n              onSuccess={responseGoogle} //isSignedIn ??\n              onFailure={responseGoogle} //handle later\n\n              cookiePolicy={\"single_host_origin\"}\n            />\n          )}\n        </div>\n      </div>\n\n    );\n  \n}\n\nexport default withStyles(useStyles)(GoogleLog);"]},"metadata":{},"sourceType":"module"}