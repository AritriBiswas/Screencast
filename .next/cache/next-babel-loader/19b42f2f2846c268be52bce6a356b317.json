{"ast":null,"code":"var _jsxFileName = \"/home/ruchika/Desktop/Testing2/Screencast/components/DrawerLeft.js\";\nvar __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport { Button } from '@material-ui/core';\nimport { Drawer } from '@material-ui/core';\nimport Timeline from './Timeline';\n\nfunction DrawerLeft(props) {\n  const [state, setState] = React.useState(false);\n  const {\n    0: isLoggedin,\n    1: setIsLoggedin\n  } = useState(false);\n\n  const toggleDrawer = open => event => {\n    setState(open);\n  };\n\n  return __jsx(React.Fragment, null, __jsx(Button, {\n    onClick: toggleDrawer(true),\n    className: \"flicker\",\n    style: {\n      color: \"#4dcfe0\",\n      fontSize: \"18px\",\n      fontWeight: \"bold\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 9\n    }\n  }, \"TIMELINE\"), __jsx(Drawer, {\n    anchor: 'left',\n    width: '100%',\n    open: state,\n    onClose: toggleDrawer(false),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    onClick: toggleDrawer(false),\n    style: {\n      backgroundColor: \"black\",\n      height: \"1000vh\",\n      width: \"50vh\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }\n  }, isLoggedin ? __jsx(Timeline, {\n    level: props.level,\n    userlevel: props.userlevel,\n    loaded: props.loaded,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 28\n    }\n  }) : __jsx(React.Fragment, null))));\n}\n\nexport default DrawerLeft;","map":{"version":3,"sources":["/home/ruchika/Desktop/Testing2/Screencast/components/DrawerLeft.js"],"names":["React","useState","Button","Drawer","Timeline","DrawerLeft","props","state","setState","isLoggedin","setIsLoggedin","toggleDrawer","open","event","color","fontSize","fontWeight","backgroundColor","height","width","level","userlevel","loaded"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,SAASC,MAAT,QAAuB,mBAAvB;AACA,SAASC,MAAT,QAAuB,mBAAvB;AACA,OAAOC,QAAP,MAAqB,YAArB;;AAEA,SAASC,UAAT,CAAoBC,KAApB,EAA2B;AACvB,QAAM,CAACC,KAAD,EAAOC,QAAP,IAAkBR,KAAK,CAACC,QAAN,CAAe,KAAf,CAAxB;AACA,QAAM;AAAA,OAACQ,UAAD;AAAA,OAAYC;AAAZ,MAA4BT,QAAQ,CAAC,KAAD,CAA1C;;AACA,QAAMU,YAAY,GAAEC,IAAD,IAAWC,KAAD,IAAW;AACpCL,IAAAA,QAAQ,CAACI,IAAD,CAAR;AACH,GAFD;;AAGA,SACI,4BACA,MAAC,MAAD;AAAQ,IAAA,OAAO,EAAED,YAAY,CAAC,IAAD,CAA7B;AACA,IAAA,SAAS,EAAC,SADV;AAEA,IAAA,KAAK,EAAE;AAACG,MAAAA,KAAK,EAAC,SAAP;AAAkBC,MAAAA,QAAQ,EAAC,MAA3B;AAAmCC,MAAAA,UAAU,EAAC;AAA9C,KAFP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADA,EAIA,MAAC,MAAD;AACA,IAAA,MAAM,EAAE,MADR;AAEA,IAAA,KAAK,EAAE,MAFP;AAGA,IAAA,IAAI,EAAET,KAHN;AAIA,IAAA,OAAO,EAAEI,YAAY,CAAC,KAAD,CAJrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKI;AACA,IAAA,OAAO,EAAEA,YAAY,CAAC,KAAD,CADrB;AAEA,IAAA,KAAK,EAAE;AAACM,MAAAA,eAAe,EAAC,OAAjB;AAA0BC,MAAAA,MAAM,EAAC,QAAjC;AAA2CC,MAAAA,KAAK,EAAC;AAAjD,KAFP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGCV,UAAU,GAAI,MAAC,QAAD;AAAU,IAAA,KAAK,EAAEH,KAAK,CAACc,KAAvB;AAA8B,IAAA,SAAS,EAAEd,KAAK,CAACe,SAA/C;AAA0D,IAAA,MAAM,EAAEf,KAAK,CAACgB,MAAxE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAJ,GAAuF,2BAHlG,CALJ,CAJA,CADJ;AAmBH;;AAED,eAAejB,UAAf","sourcesContent":["import React, {useState} from 'react'\nimport { Button } from '@material-ui/core';\nimport { Drawer } from '@material-ui/core';\nimport Timeline from './Timeline';\n\nfunction DrawerLeft(props) {\n    const [state,setState]= React.useState(false);\n    const [isLoggedin,setIsLoggedin]= useState(false);\n    const toggleDrawer=(open) => (event) => {\n        setState(open)\n    }\n    return (\n        <>\n        <Button onClick={toggleDrawer(true)}\n        className=\"flicker\"\n        style={{color:\"#4dcfe0\", fontSize:\"18px\", fontWeight:\"bold\"}}>TIMELINE</Button>\n        <Drawer\n        anchor={'left'}\n        width={'100%'}\n        open={state}\n        onClose={toggleDrawer(false)}>\n            <div \n            onClick={toggleDrawer(false)}\n            style={{backgroundColor:\"black\", height:\"1000vh\", width:\"50vh\"}}>\n            {isLoggedin ? (<Timeline level={props.level} userlevel={props.userlevel} loaded={props.loaded}/>):<></>}\n            </div>\n            </Drawer>\n            \n        </>\n    )\n}\n\nexport default DrawerLeft"]},"metadata":{},"sourceType":"module"}