{"ast":null,"code":"// import React, {useEffect, useState}from 'react'\n// import styles from '../styles/Timeline.module.css'\n// import Avatar from \"@material-ui/core/Avatar\";\n// import { makeStyles } from \"@material-ui/core/styles\";\n// import { Box } from '@material-ui/core';\n// import Rules from \"./Rules\";\n// import List from '@material-ui/core/List';\n// import ListItem from '@material-ui/core/ListItem';\n// import ListItemText from '@material-ui/core/ListItemText';\n// import MenuIcon from \"@material-ui/icons/Menu\";\n// import Link from \"next/link\";\n// import Fade from \"@material-ui/core/Fade\";\n// // import Rules from \"./Rules\";\n// import MenuItem from \"@material-ui/core/MenuItem\";\n// import { GoogleLogout } from \"react-google-login\";\n// import Router from \"next/router\";\n// import Typography from \"@material-ui/core/Typography\";\n// import axios from \"axios\";\n// import { Rowing } from '@material-ui/icons';\n// // const useStyles = makeStyles((theme) => ({\n// //     Timeline:{\n// //         backgroundColor: \"white\",\n// //         alignItems:\"center\",\n// //         margin:\"15px\",\n// //         width:\"566px\",\n// //         height:\"1022px\",\n// //         padding:\"10px\",\n// //         left:\"32px\",\n// //         top:\"28px\",\n// //     }\n// //   }));\n// function Timeline(props) {\n//     // const classes = useStyles();\n//     const [isSignedIn, setIsSigned] = useState(false);\n//     // const[level, setLevel] = useState(\"\");\n//   const [name, setName] = useState(\"\");\n//   const [image, setImage] = useState(\"\");\n//   const [Log, setLog] = useState(false);\n//   // const [loaded, setloaded] = useState([]);\n//   // const [userlevel, setUserlevel]= useState(\"\");\n//   useEffect(() => {\n//     if (localStorage.getItem(\"email\")) {\n//       setIsSigned(true);\n//       setName(localStorage.getItem(\"name\"));\n//       setImage(localStorage.getItem(\"image\"));\n//       setLog(localStorage.getItem(\"email\"));\n//     }\n//   });\n//   const logout = () => {\n//     //FB.logout();\n//     //clearTimeout(localStorage.getItem(\"interval_id\"));\n//     console.log(\"Lady\")\n//     if(localStorage.getItem('start')<Date.now())\n//     {\n//       localStorage.removeItem('email');\n//       Router.push('/')\n//     }\n//     else\n//     {\n//       localStorage.removeItem('email');\n//       Router.reload('/')\n//     }\n//   };\n//   // useEffect(()=>{\n//   //  axios\n//   //  .get(process.env.api + \"/api/status\")\n//   //  .then((response)=>{\n//   //   // localStorage.setItem(\"level\", response.data.round_questions);\n//   //   // setLevel(localStorage.getItem('level'))\n//   //   setLevel(response.data.round_questions)\n//   //   // var tnp=[];\n//   //   // for(var i=1; i<=parseInt(level); i++){\n//   //   //   console.log(\"loop\");\n//   //   //   tnp.push(\n//   //   //     <div className={styles.levelContainer} key={i}>\n//   //   //                     <div className={styles.level} key={i}>\n//   //   //                         LEVEL {i}\n//   //   //                         </div> </div>);\n//   //   // }\n//   //   // setTimeline(tnp => [...tnp,`${tnp.length}`]);\n//   //  })\n//   //  axios\n//   //  .get(process.env.api + \"/api/timeline\",{\n//   //   headers: {\n//   //     Authorization: \"Bearer \" + localStorage.getItem(\"token\"),\n//   //   },\n//   //  })\n//   //  .then((response)=>{\n//   //    setUserlevel(response.data.current_question)\n//   //  })\n//   //  .then(() => {\n//   //   setloaded(true);\n//   // });\n//   // },[]);\n//   // const runCallback=(cb)=>{\n//   //   return cb();\n//   // };\n//     return (\n//         <>\n//         <div className=\"head\">\n//           <div className=\"container neon-box\" style={{\n//             textAlign: \"center\",\n//             fontSize: \"25px\",\n//             fontFamily: \"'Russo One', sans-serif\",\n//             // color:\"white\"\n//           }}>\n//             <span className=\"flicker\">TIMELINE</span>\n//             </div>\n//         </div>\n//         <div>\n//         { (props.loaded === true) ?\n//         // {\n//         //   runCallback(() => {\n//         //     const row = [];\n//         //     for (var i=0; i<= {level}; i++){\n//         //       row.push(<div className=\"containerfigure\">\n//         //       <div className={styles.levelContainer} key={i}>\n//         //                   <div className={styles.level} key={i}>\n//         //                       LEVEL {i}\n//         //                       </div>\n//         //               </div>\n//         //               </div>\n//         //               )\n//         //     }\n//         //   })\n//         // }\n//             <div className=\"figure\">\n//                 <div className=\"containerfigure\">\n//                       {\n//                         // for(var i=1; i<=parseInt(level); i++){\n//                         //   return\n//                         //  <div className={styles.levelContainer} key={i}>\n//                         //   <div className={styles.level} key={i}>\n//                         //   LEVEL {i}\n//                         //   </div>\n//                         //   </div>}\n//                        props.level>0 && Array.apply(0,Array(parseInt(props.level))).map(function(x,i){\n//                           console.log(\"level\");\n//                           if(parseInt (props.userlevel) === i+1){\n//                             return(\n//                               <div className={styles.activelevelContainer} key={i}>\n//                                 <div className={styles.active}>\n//                                   LEVEL {i+1}\n//                                 </div>\n//                               </div>\n//                             )\n//                           }else{\n//                           return (\n//                           <div className={styles.levelContainer} key={i}>\n//                           <div className={styles.level}>\n//                               LEVEL {i+1}\n//                               </div>\n//                               </div>\n//                               )}\n//                         })\n//                       }\n//                     </div>\n//                     <div className={styles.wrapper}>\n//                     {/* <Rules>Rules</Rules> */}\n//                     <div>\n//             {isSignedIn ? (\n//               <div>\n//                 <Avatar\n//                   position=\"right\"\n//                   alt={name}\n//                   src={image}\n//                   className={styles.ava}\n//                   style={{\n//                     textAlign: \"right\",\n//                   }}\n//                 />\n//               </div>\n//             ) : (\n//                 <div></div>\n//               )}\n//           </div>\n//           </div>\n//           {Log && (\n//           <div className=\"userDetails-wrapper\">\n//             <div className=\"details-wrapper\">\n//               <GoogleLogout\n//                 render={(renderProps) => (\n//                   <div>\n//                     <Link href=\"/\">\n//                       <MenuItem onClick={logout}><Typography style={{ color: '#FFFFFF', fontFamily:\"'Russo One', sans-serif\", fontSize:18 }}>Logout</Typography></MenuItem>\n//                     </Link>\n//                   </div>\n//                 )}\n//                 onLogoutSuccess={logout}\n//               />\n//             </div>\n//           </div>\n//         ) }\n//         </div>\n//     :(<div></div>)}\n//         </div>\n//         </>\n//     )\n// }\n// export default Timeline","map":{"version":3,"sources":["/home/ruchika/Desktop/Testing2/Screencast/components/Timeline.js"],"names":[],"mappingssourcesContent":["// import React, {useEffect, useState}from 'react'\n// import styles from '../styles/Timeline.module.css'\n// import Avatar from \"@material-ui/core/Avatar\";\n// import { makeStyles } from \"@material-ui/core/styles\";\n// import { Box } from '@material-ui/core';\n// import Rules from \"./Rules\";\n// import List from '@material-ui/core/List';\n// import ListItem from '@material-ui/core/ListItem';\n// import ListItemText from '@material-ui/core/ListItemText';\n// import MenuIcon from \"@material-ui/icons/Menu\";\n// import Link from \"next/link\";\n// import Fade from \"@material-ui/core/Fade\";\n// // import Rules from \"./Rules\";\n// import MenuItem from \"@material-ui/core/MenuItem\";\n// import { GoogleLogout } from \"react-google-login\";\n// import Router from \"next/router\";\n// import Typography from \"@material-ui/core/Typography\";\n// import axios from \"axios\";\n// import { Rowing } from '@material-ui/icons';\n\n// // const useStyles = makeStyles((theme) => ({\n// //     Timeline:{\n// //         backgroundColor: \"white\",\n// //         alignItems:\"center\",\n// //         margin:\"15px\",\n// //         width:\"566px\",\n// //         height:\"1022px\",\n// //         padding:\"10px\",\n// //         left:\"32px\",\n// //         top:\"28px\",\n        \n// //     }\n// //   }));\n\n// function Timeline(props) {\n//     // const classes = useStyles();\n//     const [isSignedIn, setIsSigned] = useState(false);\n//     // const[level, setLevel] = useState(\"\");\n//   const [name, setName] = useState(\"\");\n//   const [image, setImage] = useState(\"\");\n//   const [Log, setLog] = useState(false);\n//   // const [loaded, setloaded] = useState([]);\n//   // const [userlevel, setUserlevel]= useState(\"\");\n  \n  \n\n//   useEffect(() => {\n//     if (localStorage.getItem(\"email\")) {\n//       setIsSigned(true);\n//       setName(localStorage.getItem(\"name\"));\n//       setImage(localStorage.getItem(\"image\"));\n//       setLog(localStorage.getItem(\"email\"));\n//     }\n//   });\n//   const logout = () => {\n//     //FB.logout();\n//     //clearTimeout(localStorage.getItem(\"interval_id\"));\n    \n//     console.log(\"Lady\")\n//     if(localStorage.getItem('start')<Date.now())\n//     {\n\n//       localStorage.removeItem('email');\n      \n//       Router.push('/')\n//     }\n//     else\n//     {\n\n//       localStorage.removeItem('email');\n      \n//       Router.reload('/')\n//     }\n//   };\n\n//   // useEffect(()=>{\n//   //  axios\n//   //  .get(process.env.api + \"/api/status\")\n//   //  .then((response)=>{\n//   //   // localStorage.setItem(\"level\", response.data.round_questions);\n//   //   // setLevel(localStorage.getItem('level'))\n//   //   setLevel(response.data.round_questions)\n\n//   //   // var tnp=[];\n//   //   // for(var i=1; i<=parseInt(level); i++){\n//   //   //   console.log(\"loop\");\n//   //   //   tnp.push(\n//   //   //     <div className={styles.levelContainer} key={i}>\n//   //   //                     <div className={styles.level} key={i}>\n//   //   //                         LEVEL {i}\n//   //   //                         </div> </div>);\n\n    \n//   //   // }\n//   //   // setTimeline(tnp => [...tnp,`${tnp.length}`]);\n//   //  })\n//   //  axios\n//   //  .get(process.env.api + \"/api/timeline\",{\n//   //   headers: {\n//   //     Authorization: \"Bearer \" + localStorage.getItem(\"token\"),\n//   //   },\n//   //  })\n//   //  .then((response)=>{\n//   //    setUserlevel(response.data.current_question)\n//   //  })\n//   //  .then(() => {\n//   //   setloaded(true);\n//   // });\n//   // },[]);\n  \n//   // const runCallback=(cb)=>{\n//   //   return cb();\n//   // };\n\n//     return (\n//         <>\n//         <div className=\"head\">\n//           <div className=\"container neon-box\" style={{\n//             textAlign: \"center\",\n//             fontSize: \"25px\",\n//             fontFamily: \"'Russo One', sans-serif\",\n//             // color:\"white\"\n//           }}>\n//             <span className=\"flicker\">TIMELINE</span>\n//             </div>\n//         </div>\n//         <div>\n//         { (props.loaded === true) ?\n//         // {\n//         //   runCallback(() => {\n//         //     const row = [];\n//         //     for (var i=0; i<= {level}; i++){\n//         //       row.push(<div className=\"containerfigure\">\n//         //       <div className={styles.levelContainer} key={i}>\n//         //                   <div className={styles.level} key={i}>\n//         //                       LEVEL {i}\n//         //                       </div>\n//         //               </div>\n//         //               </div>\n//         //               )\n//         //     }\n//         //   })\n//         // }\n//             <div className=\"figure\">\n//                 <div className=\"containerfigure\">\n//                       {\n//                         // for(var i=1; i<=parseInt(level); i++){\n//                         //   return\n//                         //  <div className={styles.levelContainer} key={i}>\n//                         //   <div className={styles.level} key={i}>\n//                         //   LEVEL {i}\n//                         //   </div>\n//                         //   </div>}\n                        \n//                        props.level>0 && Array.apply(0,Array(parseInt(props.level))).map(function(x,i){\n//                           console.log(\"level\");\n//                           if(parseInt (props.userlevel) === i+1){\n//                             return(\n//                               <div className={styles.activelevelContainer} key={i}>\n//                                 <div className={styles.active}>\n//                                   LEVEL {i+1}\n//                                 </div>\n//                               </div>\n//                             )\n//                           }else{\n                          \n//                           return (\n                          \n//                           <div className={styles.levelContainer} key={i}>\n//                           <div className={styles.level}>\n//                               LEVEL {i+1}\n//                               </div>\n//                               </div>\n//                               )}\n//                         })\n//                       }\n//                     </div>\n//                     <div className={styles.wrapper}>\n//                     {/* <Rules>Rules</Rules> */}\n//                     <div>\n//             {isSignedIn ? (\n//               <div>\n//                 <Avatar\n//                   position=\"right\"\n//                   alt={name}\n//                   src={image}\n//                   className={styles.ava}\n//                   style={{\n//                     textAlign: \"right\",\n                    \n//                   }}\n//                 />\n//               </div>\n//             ) : (\n//                 <div></div>\n//               )}\n//           </div>\n//           </div>\n//           {Log && (\n//           <div className=\"userDetails-wrapper\">\n//             <div className=\"details-wrapper\">\n//               <GoogleLogout\n//                 render={(renderProps) => (\n//                   <div>\n//                     <Link href=\"/\">\n//                       <MenuItem onClick={logout}><Typography style={{ color: '#FFFFFF', fontFamily:\"'Russo One', sans-serif\", fontSize:18 }}>Logout</Typography></MenuItem>\n//                     </Link>\n//                   </div>\n//                 )}\n//                 onLogoutSuccess={logout}\n//               />\n//             </div>\n            \n            \n//           </div>\n//         ) }\n//         </div>\n//     :(<div></div>)}\n//         </div>\n//         </>\n//     )\n// }\n// export default Timeline\n\n"]},"metadata":{},"sourceType":"script"}